{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tutoriel Linux Raccourcis utiles Alt + Ctrl + T permet d'ouvrir un terminal Ctrl + D fin de fichier, ou exit . ferme le terminal Tab permet de faire de l\u2019auto-compl\u00e9tion Ctrl + R permet de faire une recherche parmi les commandes pr\u00e9c\u00e9dentes Ctrl + C arr\u00eate la commande en cours Ctrl + L ou clear efface le contenu de la console Shift + PgUp et Shift + PgDown pour monter et descendre dans la console Ctrl + A ram\u00e8ne le curseur au d\u00e9but de la commande, Ctrl + E ou Fin ram\u00e8ne le curseur \u00e0 la de la commande Ctrl + U supprime ce qui se trouve \u00e0 gauche du curseur, Ctrl + K ce qui se trouve \u00e0 droite Ctrl + W supprime le premier mot \u00e0 gauche du curseur, utile pour supprimer ke param\u00e8tre \u00e0 gauche du curseur Ctrl + Y permet de coller le texte coup\u00e9 avec Ctrl + U , Ctrl + K ou Ctrl + W Les r\u00e9pertoires /bin pour binaires contient les commandes dont le syst\u00e8me \u00e0 besoin pour d\u00e9marrer /boot est le r\u00e9pertoire o\u00f9 Linux range ce qu'il faut pour d\u00e9marrer. Les fichiers vmlinuz sont les diff\u00e9rents noyaux, on en utilise un seul \u00e0 la fois /dev pour device ou p\u00e9riph\u00e9rique en fran\u00e7ais, contient un fichier pour chaque p\u00e9riph\u00e9rique /etc pour Editable Text Configuration ou configuration \u00e9ditable par texte /lib pour libraries ou biblioth\u00e8qes contient les biblioth\u00e8ques partag\u00e9es par /bin et /sbin /media et /mnt sont les points de montage du syst\u00e8me. /run est un ajout r\u00e9cent qui doit prendre la rel\u00e8ve de /media . Les p\u00e9riph\u00e9riques amovibles doivent \u00eatre mont\u00e9s lors de leur insertion et d\u00e9monter lorsqu'on l'enl\u00e8ve /proc et /sys contiennent un syt\u00e8me de fichiers \"volatile\" qui fournit des infos sur le syst\u00e8me /root est le r\u00e9pertoire de l'utilisateur root /sbin pour system binaries ou binaires syst\u00e8me contient des ex\u00e9cutables pour l'administrateur comme partitionner ou formation des disques, configurer le r\u00e9seau... /usr pour Unix System Resources contient tout ce qui n'est pas utile au fonctionnement minimal du syst\u00e8me. Les applications se trouvent pour la plupart ici. /usr/bin est \u00e9quivalent \u00e0 C:\\Program Files de Windows. /tmp est le r\u00e9pertoire temporaire du syst\u00e8me /var contient des fichiers variables, cr\u00e9es par des serivces, c'est-\u00e0-dire des logiciels qui tournent en t\u00e2che de fond Les types de fichier r\u00e9pertoire avec une barre oblique \u00e0 la fin (couleur par d\u00e9faut : bleu) fichier r\u00e9gulier non ex\u00e9cutable sans suffixe (couleur par d\u00e9faut : noir ou blanc) lien symbolique avec un @ \u00e0 la fin, \u00e9quivalent du raccourci sous Windows (couleur par d\u00e9faut : turquoise) fichier r\u00e9gulier ex\u00e9cutable avec un * \u00e0 la fin (couleur par d\u00e9faut : vert) Les commandes de base date donne la date et l'heure time { commande ; } ex\u00e9cute commande et donne son temps d'ex\u00e9cution gucharmap affiche la table de caract\u00e8res history affiche la liste des commandes que l'on a saisi !num permet de r\u00e9p\u00e9ter une commande d\u00e9j\u00e0 effectu\u00e9e, par exemple !245 pwd pour Print Working Directory affiche le dossier courant file fichier pr\u00e9cise le type de fichier ls pour list , liste les fichiers et dossiers du r\u00e9pertoire courant. ls /usr liste les fichiers du r\u00e9pertoire usr . -a ou --all affiche les fichiers et dossiers cach\u00e9s -A affiche tout comme -a sauf les dossiers ./ (dossier courant) et ../ (dossier parent) -F indique le type d'\u00e9l\u00e9ment (dossier, fichier, raccourci...) -l liste d\u00e9taill\u00e9e (droits, nombre de liens physiques, nom du propri\u00e9taire, nom du groupe, taille du fichier en octets, date derni\u00e8re modification, nom du fichier). Avec lh , le h pour Human Readable permet d'avoir la taille du fichier en Ko, Mo... ls -l prefixe* permet de lister seulement les fichiers commen\u00e7ant par prefixe -d pour Directory qui affiche le r\u00e9pertoire au lieu d'afficher le contenu. Pour afficher les informations d\u00e9tailles du r\u00e9pertoire sans son contenu : ls -ld -t trie par date de derni\u00e8re modification. On voit en premier le dernier fichier modifi\u00e9. -r renverse l'ordre d'affichage des fichiers -R pour recursive , affiche les sous-dossiers et leur contenu exemple de combinaison des commandes : ls -larth cd Change Directory , c'est-\u00e0-dire changer de dossier. Sans param\u00e8tre, ram\u00e8ne dans le home personnel chemin absolu : on part de la racine : cd /home/gaetan/documents chemin relatif : on part du dossier courant. Exemple si on est dans /home/gaetan : cd documents cd .. pour remonter dans le dossier parent du Disk Usage informe sur la taille que les dossiers occupent. \u00e0 combiner avec -h : du -h -a pour avoir la taille des dossiers ET des fichiers du -ah -s pour avoir juste le total : du -sh echo affiche une ligne de texte et peut l'enregistrer dans un fichier echo Bonjour affiche Bonjour dans la console echo Bonjour > test.txt enregistre Bonjour dans un fichier test.txt . Si le fichier existe d\u00e9j\u00e0, il est \u00e9cras\u00e9. echo Bonjour >> test.txt ajoute une ligne au fichier test.txt cat affiche tout le contenu d'un fichier, et peut en concat\u00e9ner cat test.txt affiche le contenu du fichier cat -n test.txt affiche le contenu du fichier avec les num\u00e9ros de ligne cat test.txt test2.txt affiche le contenu des deux fichiers cat fichier1 fichier2 fichier3 > grosfichier enregistre le contenu des trois fichiers dans un seul pour \u00e9crire dans un fichier sur plusieurs lignes, par exemple 2 lignes : cat > test.txt << FIN ligne1 ligne2 FIN more et less pour afficher les gros fichiers, page par page. Ce sont des logiciels de pagination/visualisation de fichiers texte, on ne peut pas modifier les fichiers avec. more est plus ancien, less plus r\u00e9cent et plus complet more fichier.txt affiche le texte en remplissant un \u00e9cran puis s'arr\u00eate. Pour continuer, il faut : Entr\u00e9e pour avancer ligne \u00e0 ligne Espace pour avancer page \u00e0 page Q pour sortir du mode de visualisation B pour reculer page par page une fois arriv\u00e9 au bout du fichier, on sort du mode de visualisation less est un autre logiciel de visualisation = permet de savoir \u00e0 quelle ligne on est et \u00e0 quel pourcentage du fichier m\u00eames commandes avec quelques avantages : ne quitte pas le mode de visualisation \u00e0 la fin du fichier possibilit\u00e9 de naviguer avec les fl\u00e8ches du clavier fonction de recherche /maChaine . Toutes les occurrences sont affich\u00e9s en surbrillance. Naivguer avec n et N pour passer d'occurrence en occurrence. head et tail permettent d'afficher le d\u00e9but et la fin d'un fichier, par d\u00e9faut 10 lignes. On peut sp\u00e9ficier le nombre de lignes que l'on veut afficher. head -n 4 fichier affiche les 4 premi\u00e8res lignes de fichier tail fichier affiche les 10 derni\u00e8res lignes du fichier tail -f fichier pour follow permet d'afficher la fin du fichier au fur et \u00e0 mesure de son \u00e9volution touch monFichier cr\u00e9e un fichier vide monFichier s'il n'existe pas, sinon modifie l'horodatage du fichier si le fichier existe mkdir , pour Make Directory , sert \u00e0 cr\u00e9er un nouveau r\u00e9pertoire en sp\u00e9cifiant le nom de ce dernier ou en sp\u00e9cifiant le chemin complet mkdir monDossier ou mkdir monDossier monDossier2 pour en cr\u00e9er plusieurs \u00e0 la fois mkdir -p monDossier1/monDossier2 avec l'option -p pour parent pour cr\u00e9er un dossier et un sous-dossier dedans on peut utiliser l'option -v ou --verbose pour avoir des informations sur la cr\u00e9ation pour g\u00e9rer les espaces, 3 possibilit\u00e9s : mkdir \"Mes documents\" , mkdir 'Mes documents' ou mkdir Mes\\ documents tree permet de voir l'arborescence dans le r\u00e9pertoire courant tree monDossier permet de voir l'arborescence d'un sous-dossier du r\u00e9pertoire courant -d n'affiche que les dossiers, -a affiche les dossiers et fichiers cach\u00e9s cp pour copy permet de copier des fichiers et des r\u00e9pertoires cp fichier fichier2 copie le fichier dans le m\u00eame r\u00e9pertoire cp fichier.txt /cheminDestination copie le fichier dans un autre r\u00e9pertoire cp fichier.txt /dossier/fichier2.txt copie le fichier dans un autre r\u00e9pertoire en le renommant cp -R Fichiers/ /tmp/ ou cp -r Fichiers/ /tmp/ permet de copier un r\u00e9pertoire entier avec tout son contenu ( -R pour recursive ) dans le r\u00e9pertoire sp\u00e9cifi\u00e9 cp -R dossier/ copieDossier permet de copier l'int\u00e9gralit\u00e9 du r\u00e9pertoire dans un r\u00e9pertoire d'un autre nom cp -R dossier/ ../copieDossier permet de copier l'int\u00e9gralit\u00e9 du r\u00e9pertoire dans un r\u00e9pertoire d'un autre nom dans un autre endroit du syst\u00e8me mv pour move permet de d\u00e9placer et renommer des fichiers et des r\u00e9pertoires mv fichier dossier/ d\u00e9place fichier dans dossier mv dossier1 dossier2/ d\u00e9place dossier1 et son contenu dans dossier2 mv dossier/fichier ./ d\u00e9place fichier qui est dans dossier dans le r\u00e9pertoire courant mv fichier fichierRenomm\u00e9 renomme fichier en fichierRenomm\u00e9 , fonctionne aussi pour les dossiers mv fichier dossier/fichierRenomm\u00e9 d\u00e9place et renomme le fichier en une seule commande rm et rmdir pour remove et remove directory permettent de supprimer des fichiers et des dossiers rm fichier supprime fichier sans demande de confirmation, le fichier est perdu \u00e0 jamais rm -i fichier pour interactive demande une confirmation avant la suppression rm -f fichier pour force force la suppression si la demande de confirmation est syst\u00e9matique, par exemple avec l'ajout d'un alias sur la commande rm rmdir dossier supprime dossier seulement s'il est vide rm -r dossier pour recursive , supprime dossier et tout son contenu ln permet de cr\u00e9er des liens (raccourcis) entre fichiers. Il existe 2 types de liens : liens physiques : ln fichier1 fichier2 cr\u00e9e fichier2 qui partage le m\u00eame inode (contenu du fichier) que fichier1 ls -i permet d'afficher le num\u00e9ro d'inode pour v\u00e9rifier si les fichiers sont associ\u00e9s au m\u00eame inode Une modification dans l'un entra\u00eene une modification dans l'autre. Si on supprime l'un des 2 fichiers, l'autre reste en place et le contenu est toujours le m\u00eame. Il faut supprimer les 2 pour supprimer le contenu. liens symboliques : ln -s fichier1 fichier2 pour symbolique . Cr\u00e9e fichier2 qui pointe sur fichier1 . ressemble davantage au \"raccourci\" sous Windows, c'est-\u00e0-dire qu'on cr\u00e9e un lien vers un autre fichier on \u00e9dite le m\u00eame contenu dans fichier1 et fichier2 fonctionnent sur des r\u00e9pertoires contrairement aux liens physiques qui ne fonctionnent que sur les fichiers si on supprime fichier2 , rien de mal. Si on supprime fichier1 , fichier2 pointe vers un fichier qui n'existe plus, on parle de lien mort alias concerne les alias de commande, qui sont des raccourcis alias permet de voir les alias existants alias rm='rm -i' permet de cr\u00e9er un alias. Cette cr\u00e9ation n'est pas persistante, elle dispara\u00eet en fermant la console la documentation man pour manual affiche le manuel d'une commande comme avec la commande less : man mkdir . /test pour rechercher test dans la documentation. La documentation man est aussi disponible sur internet apropos permet de chercher les commandes en rapport \u00e0 un terme, par exemple apropos sound --help donne une information proche de celle de man , par exemple mkdir --help whatis donne juste le nom de la commande pour comprendre ce qu'elle fait, par exemple whatis mkdir info affiche un manuel en ligne encore plus complet que man , par exemple info mkdir rechercher des fichiers locate fichier pour une recherche rapide sur la base de donn\u00e9es des fichiers qui est mise \u00e0 jour toutes les 24 heures. Pour la mettre \u00e0 jour, lancer la commande sudo updatedb find pour une recherche approfondie, en parcourant les fichiers sur le disque, ce qui peut \u00eatre long. La commande s'utilise avec des param\u00e8tres find \"o\u00f9\" \"quoi\" \"que faire avec\" . Seul \"quoi\" est obligatoire. o\u00f9 est le dossier dans lequel on fait la recherche, ainsi que tous ses sous-dossiers. Si non renseign\u00e9, recherche dans le dossier courant quoi fichier ou dossier \u00e0 rechercher, par nom, date de cr\u00e9ation, taille... que faire avec on peut faire un post-traitement. Par d\u00e9faut, la commande affiche la liste des fichiers trouv\u00e9s, mais d'autres actions sont possibles -iname option qui permet d'ignorer la casse pour faire la recherche, par exemple find /etc/ -iname 'readme' exemples : find -name \"README.md\" recherche un fichier dans le r\u00e9pertoire courant qui s'appelle exactement README.md . On peut utiliser l'\u00e9toile pour rechercher des noms incomplets, par exemple : find -name \"READM*\" find /var/log/ -name \"syslog\" find /etc -type d permet d'afficher tous les r\u00e9pertoires et sous-r\u00e9pertoires du dossier find -size +10M permet de rechercher les fichiers de plus de 10Mo. On peut utiliser le - au lieu de + , et le k ou le G \u00e0 la place du M find -name \"*.md\" -atime 6 recherche les fichiers au format markdown modifi\u00e9 il y a moins de 7 jours (0 pour 1 jour). On peut enlever le - pour modifi\u00e9 exactement il y a x jours -type d et -type f permet de limiter la recherche aux r\u00e9pertoires ou aux fichiers, par exemple find -name \"syslog\" -type d find -name \"README.md\" -print permet d'afficher les r\u00e9sultats, ce qui correspond au r\u00e9sultat par d\u00e9faut find -name \"README.md\" -printf permet de formater le r\u00e9sultat affich\u00e9, par exemple find -name \"README.md\" -printf \"%p - %u\\n\" -delete permet de supprimer les fichiers trouv\u00e9s, par exemple find -name \"README.md\" -delete -exec , permet d'appeler une commande qui effectuera une action sur chacun des fichiers trouv\u00e9s find /bin -size +200k -exec ls -l \\{} \\; permet d'effectuer un ls -l sur les r\u00e9sultats de la recherche. {} symbolise le r\u00e9sultat de la recherche find /bin -size +200k | xargs ls -l . xargs sert \u00e0 construire et ex\u00e9cuter des lignes de commande \u00e0 partir de l\u2019entr\u00e9e standard manipulations dans les fichiers awk est un langage de traitement de lignes qui sert \u00e0 manipuler des fichiers textes awk NR==5 fichier affiche la 5e ligne de fichier awk NR==2,NR==4 fichier affiche les lignes 2 \u00e0 4 de fichier sed , pour stream editor sed -n 5p fichier affiche la 5e ligne de fichier sed -n 2,4p fichier affiche les lignes 2 \u00e0 4 de fichier grep permet de filtrer des donn\u00e9es grep texte fichier permet de chercher texte dans fichier , par exemple grep alias .bashrc permet de chercher le mot alias dans le fichier .bashrc et affiche toutes les lignes du fichier comportant ce mot -i pour ne pas tenir compte de la casse, grep -i texte fichier -n pour afficher les num\u00e9ros de lignes -v permet d'inverser la recherche et d'afficher uniquement les lignes qui ne contiennent pas le mot recherch\u00e9 -c permet de compter le nombre de lignes au lieu de les afficher -r permet de faire une recherche r\u00e9cursive dans tous les sous-dossiers et fichiers, par exemple grep -r machaine dossier/ . Le nom du fichier o\u00f9 la cha\u00eene a \u00e9t\u00e9 trouv\u00e9 s'affiche au d\u00e9but de la ligne -E permet d'utiliser des expressions r\u00e9guli\u00e8res on peut utiliser egrep \u00e0 la place de grep -E -E n'est pas obligatoire car les expressions r\u00e9guli\u00e8res sont activ\u00e9es de base sur Linux. C'est utile sur les autres syst\u00e8mes Unix . caract\u00e8re quelconque, ^ d\u00e9but de ligne, $ fin de ligne, [] un des caract\u00e8res entre les crochets, ? l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent est optionnel (peut \u00eatre pr\u00e9sent 0 ou 1 fois), * l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent peut \u00eatre pr\u00e9sent 0, 1 ou plusieurs fois, + l\u00b2'\u00e9l\u00e9ment pr\u00e9c\u00e9dent doit \u00eatre pr\u00e9sent 1 ou plusieurs fois, | ou, () groupement d'expressions par exemple grep -E ^alias .bashrc pour rechercher le mot alias uniquement en d\u00e9but de ligne grep -E [Aa]lias .bashrc renvoie les lignes qui contiennent alias ou Alias grep -E [0-4] .bashrc renvoie les lignes qui contiennent un chiffre entre 0 et 4 sort permet de trier les lignes sort fichier trie les lignes du fichier par ordre alphab\u00e9tique et affiche le r\u00e9sultat dans la console, en ignorant la casse -o permet d'\u00e9crire le r\u00e9sultat dans un fichier : sort -o resultatTri\u00e9 fichierATrier -r permet de trier en ordre inverse, sort -r fichier -R permet de trier al\u00e9atoirement -n permet de trier des nombres. Sans cette option, ils sont tri\u00e9s alphab\u00e9tiquement donc par exemple 150 serait avant 18 wc pour word count permet de compter le nombre de lignes, de mots, de caract\u00e8res, d'octets wc fichier retourne le nombre de lignes, de mots et d'octets -l retourne le nombre de lignes, wc -l fichiers -w retourne le nombre de mots -c retourne le nombre d'octets -m retourne le nombre de caract\u00e8res uniq permet de supprimer les doublons (lignes identiques) seulement si elles se suivent, il faut donc travailler sur un fichier tri\u00e9 uniq fichier affiche dans la console la liste des lignes sans doublons uniq fichierATraiter fichierSansDoublons enregistre le r\u00e9sultat dans un fichier -c compte le nombre d'occurence, affiche devant chaque ligne le nombre de fois qu'elle est pr\u00e9sente dans le fichier, par exemple uniq -c fichier -d affiche uniquement les lignes pr\u00e9sentes plusieurs fois cut permet de couper les lignes d'un fichier afin de conserver uniquement une partie de chaque ligne -c pour couper selon le nombre de caract\u00e8res. cut -c 2-5 noms.txt affiche les caract\u00e8res 2 \u00e0 5 de chaque ligne, cut -c -3 du 1er au 3 et cut -c 3- du 3e au dernier couper selon un d\u00e9limiteur, -d pour pr\u00e9ciser le d\u00e9limiteur, -f pour indiquer le num\u00e9ro du ou des champs \u00e0 couper. cut -d , -f 1 fichier conserve le 1er champ de chaque ligne, -f 2-4 conserve les champs 2, 3 et 4, -f 1,3 les champs 1 et 3 Les \u00e9diteurs de texte Il en existe plusieurs. Les plus connus sont Nano, Vim et Emacs. - Nano - \u00e9diteur de texte simple compar\u00e9 \u00e0 Vim et Emacs - nano pour lancer l'\u00e9diteur vide - nano fichier lance l'\u00e9diteur en ouvrant le fichier - -m pour autoriser l'utilisation de la souris - -i pour l'indentation automatique, c'est-\u00e0-dire que la tabulation de la ligne pr\u00e9c\u00e9dente sera respect\u00e9 lorsqu'on va \u00e0 la ligne - Nano se configure dans le fichier .nanorc , situ\u00e9 \u00e0 la racine du home pour son propre fichier de configuration ( /home/user/.nanorc ), o\u00f9 dans le fichier nanorc situ\u00e9 dans le dossier etc ( /etc/nanorc ). Ce dernier n\u00e9cessite d'\u00eatre en root pour le modifier. Il contient d\u00e9j\u00e0 plusieurs options mises en commentaires pour l'exemple Emacs : puissant \u00e9diteur de texte d\u00e9velopp\u00e9 par Richard Stallman, le fondateur du projet GNU Vim : autre puissant \u00e9diteur de texte g\u00e9n\u00e9ralement disponible par d\u00e9faut sur Linux Vi existe en plusieurs versions : vi , le clone elvis , vim (VI iMproved, version am\u00e9lior\u00e9e de Vi),ou encore gvim dot\u00e9e d'une interface graphique Vimtutor pour apprendre \u00e0 s'en servir Configuration de la console Il faut modifier le fichier .bashrc personnel situ\u00e9 dans le r\u00e9pertoire personnel, ou le fichier bashrc global situ\u00e9 dans le r\u00e9pertoire /etc/bash.bashrc . On peut par exemple personnaliser l'invite de commande, ou aussi y cr\u00e9er des alias qui sont persistants. Il existe \u00e9galement un fichier ~/.profile et un fichier /etc/profile qui est lu dans les consoles o\u00f9 on se logue (les consoles Alt+Ctrl+F1 \u00e0 F6), alors que le .bashrc est lu dans les consoles o\u00f9 on ne se logue pas, comme les consoles en mode graphique. Le .profile fait appel au .bashrc par d\u00e9faut, donc faire des modifications dans le .bashrc modifiera les options pour les consoles avec et sans login. Les utilisateurs et les droits Chaque personne \u00e0 son propre compte utilisateur avec des droits limit\u00e9s. Il existe un super-utilisateur appel\u00e9 root qui a tous les droits, qui ne doit servir que rarement, lorsque c'est n\u00e9cessaire. sudo pour Substitute User DO ou encore faire en se substituant \u00e0 l'utilisateur, permet de devenir root temporairement le temps d'ex\u00e9cuter une commande en faisant sudo commande sudo su pour switch user , permet de devenir root et de le rester dans Ubuntu su - est suffisant dans les autres distributions, le tiret rend accessible certains programmes destin\u00e9s seulement \u00e0 root, et nous place dans le dossier personnel de root ( /root ) le symbole # \u00e0 la fin de l'invite de commandes indique que l'on est devenu super-utilisateur exit permet de quitter le mode root , permet aussi de fermer la console dans une session normale su - test permet de se connecter avec le compte utilisateur test , le tiret indique que l'on souhaite utiliser ses variables d'environnement whoami permet de savoir avec quel utilisateur on est connect\u00e9 id permet d'afficher l'UID (User Identification), le GID (Group Identification) et la liste de groupe secondaires de l'utilisateur connect\u00e9, par exemple affiche uid=1000(gaetan) gid=1000(gaetan) groupes=1000(gaetan),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),130(sambashare) id user affiche les m\u00eames informations pour l'utilisateur user id -u affiche uniquement le num\u00e9ro uid id -g affiche uniquement le num\u00e9ro gid id -gn affiche uniquement le nom du groupe id -Gn ou groups affiche les noms des groupes dont l'utilisateur est membre finger user affiche les donn\u00e9es GECOS de user , c'est-\u00e0-dire son login, son nom, son home, son shell, etc... le fichier /etc/passwd contient les informations des utilisateurs concernant leur connexion, par exemple : gaetan:x:1000:1000:Ga\u00ebtan Varlet,,,:/home/gaetan:/bin/bash . utilisateur root, uid=0 utilisateurs syst\u00e8me, uid compris entre 1 et 99 utilisateurs normaux avec uid sup\u00e9rieur ou \u00e9gal \u00e0 1000 les mdp sont dans le fichier /etc/shadow , uniquement accessible par root Gestion des utilisateurs commandes r\u00e9serv\u00e9s \u00e0 root adduser permet d'ajouter un utilisateur, avec au minimum le nom d'utisateur \u00e0 cr\u00e9er, par exemple adduser louis r\u00e9pertoire personnel est cr\u00e9\u00e9 on doit choisir un mot de passe passwd permet de changer le mot de passe du compte en param\u00e8tre, par exemple passwd louis sans param\u00e8tre, c'est le mdp de l'utilisateur connect\u00e9 que l'on modifie deluser permet de supprimer un compte, par exemple deluser louis ne supprime pas le r\u00e9pertoire personnel. Si on souhaite le faire, ajouter l'option --remove-home , par exemple deluser --remove-home louis ou encore userdel -r louis adduser et deluser n'existent que sous Debian et ses descendants dont Ubuntu. Ailleurs, il faut utiliser les commandes Unix traditionnelles useradd et userdel qui font la m\u00eame chose de mani\u00e8re plus basique, par exemple il faut appeler passwd pour d\u00e9finir un mdp et activer le compte Gestion des groupes chaque utilisateur appartient \u00e0 un groupe. Par d\u00e9faut, un groupe du m\u00eame nom que l'utilisateur est cr\u00e9\u00e9 addgroup permet de cr\u00e9er un groupe, par exemple addgroup famille delgroup permet de supprimer un groupe, par exemple delgroup famille usermod permet de modifier un utilisateur -l renomme l'utilisateur sans renommer son r\u00e9pertoire personnel -g change de groupe, par exemple usermod -g famille louis pour mettre Louis dans le groupe famille et usermod -g louis louis pour le remettre dans le groupe louis -G permet \u00e0 un utilisateur d'avoir plusieurs groupes, par exemple usermod -G famille,amis louis . L'utilisateur ne sera plus dans les groupes dans lesquels il \u00e9tait avant. -a permet d'ajouter des groupes \u00e0 un utilisateur sans perdre les groupes auxquels il appartient, par exemple usermod -aG famille louis gpasswd -d permet de supprimer l'appartenance d'un utilisateur \u00e0 un groupe, par exemple gpasswd -d louis audio le fichier /etc/group contient la liste des groupes avec leur GID et la liste de des membres des groupes addgroup et delgroup n'existent que sous Debian et ses d\u00e9riv\u00e9s. Les commandes traditionnelles sont groupadd et groupdel qui offrent moins d'options Gestion des propri\u00e9taires d'un fichier seul l'utilisateur root peut changer le propri\u00e9taire d'un fichier chown pour change owner , permet de changer le propri\u00e9taire d'un fichier, en renseignant le nom du nouveau propri\u00e9taire et le nom du fichier, par exemple chown louis fichier . Cela ne change pas le groupe du fichier chown louis:famille fichier permet de changer le propri\u00e9taire et le groupe en m\u00eame temps -R pour recursive permet d'affecter tous les sous-dossiers et fichiers contenu dans le dossier, par exemple chown -R louis:louis /home/gaetan/dossier/ chgrp permet de changer le groupe propri\u00e9taire du fichier, par exemple chgrp famille fichier Modifier les droits d'acc\u00e8s chaque fichier et dossier poss\u00e8de des droits : voir, modifier et ex\u00e9cuter la commande ls -l permet de voir les droits, il s'agit des 10 premiers caract\u00e8res le 1er d pour directory si c'est un dossier, l pour link ou - si c'est un fichier 3 triplets qui correspondent aux droits de l'utilisateur, du groupe et des autres. Un triplet correspond \u00e0 rwx pour read , write et execute Ce dernier n'est utile que pour les fichiers ex\u00e9cutables (programmes et scripts). si la lettre appara\u00eet, c'est que le droit existe. S'il y a un tiret \u00e0 la place, c'est qu'il n'y a aucun droit. si c'est un dossier, x indique qu'on peut se placer dans le r\u00e9pertoire avec la commande cd , et voir son contenu si on a les droits en lecture dessus r . les droits de modification donnent aussi les droits de suppression root \u00e0 tous les droits chmod permet de modifier les droits d'acc\u00e8s. Pas besoin d'\u00eatre root, il suffit d'\u00eatre propri\u00e9taire du fichier pour modifier les droits d'acc\u00e8s plusieurs m\u00e9thodes d'attribution des droits avec des chiffres : r=4, w=2, x=1. On les combine en additionnant, par exemple 6 donne les droits en lecture et \u00e9criture. \u00e7a va de 0 \u00e0 7. chmod 777 fichier donne tous les droits \u00e0 tout le monde, chmod 000 fichier ne donne aucun droit \u00e0 personne, sauf \u00e0 root avec des lettres : u=user, g=group, o=other. + =ajouter, - =supprimer et = =affecter. Par exemple chmod g+w fichier ajoute le droit en \u00e9criture au groupe -R pour affecter r\u00e9cursivement tous les sous-dossiers et fichiers, par exemple chmod -R 700 /home/louis umask permet de voir les permissions par d\u00e9faut. Un fichier cr\u00e9\u00e9 ne peut avoir de base les droits d'ex\u00e9cution. Installer des programmes paquet : c'est un programme \u00ab pr\u00eat \u00e0 l'emploi \u00bb, l'\u00e9quivalent des programmes d'installation sous Windows en quelque sorte. C'est une sorte de dossier zipp\u00e9 qui contient tous les fichiers du programme. Il se pr\u00e9sente sous la forme d'un fichier .deb et contient toutes les instructions n\u00e9cessaires pour installer le programme d\u00e9pendance : un paquet peut avoir besoin de plusieurs autres paquets pour fonctionner, on dit qu'il a des d\u00e9pendances d\u00e9p\u00f4t : c'est le serveur sur lequel on va t\u00e9l\u00e9charger nos paquets programme graphique qui g\u00e8re les paquets ou utiliser un programme en ligne de commande comme apt-get ou aptitude apt-get update met \u00e0 jour le cache (liste des paquets existant propos\u00e9 par le d\u00e9p\u00f4t) apt-cache search paquetRecherch\u00e9 recherche le paquet que l'on veut t\u00e9l\u00e9charger si on ne connait pas le nom exact apt-get install monPaquet t\u00e9l\u00e9charge et installe le paquet apt-get upgrade met \u00e0 jour tous les paquets install\u00e9s, apr\u00e8s avoir fait un apt-get update car apt-get comapre la version des paquets install\u00e9s avec ceux pr\u00e9sents dans le cache apt-get autoremove monPaquet permet de d\u00e9sinstaller un paquet et les d\u00e9pendances devenues inutiles alors apt-get remove monPaquet ne supprime que le paquet en param\u00e8tre Programmes absents des d\u00e9p\u00f4ts officiels Si un programme est absent des d\u00e9p\u00f4ts officiels, on peut parfois trouver sur le site web du logiciel un paquetage .deb , sp\u00e9cifique \u00e0 Debian et ses distributions d\u00e9riv\u00e9es. Par exemple, Red Hat utilise des .rpm . - t\u00e9l\u00e9charger le .deb et double-cliquer dessus. - s'il n'y a pas d'erreurs, on peut installer le programme - sinon, le programme ne correspond pas \u00e0 notre machine (32 bits au lieu de 64 bits par exemple) ou alors qu'il manque des d\u00e9pendances qu'il faut installer manuellement Si le .deb n'est pas disponible, il faut alors r\u00e9cup\u00e9rer le code source du programme et le compiler pour avoir un ex\u00e9cutable pour sa machine - le programme build-essential est n\u00e9cessaire pour compiler le code source d'un programme - trouver le code source sur le site du programme et le t\u00e9l\u00e9charger, et \u00e9ventuellement le d\u00e9compresser - ex\u00e9cuter le programme configure avec la commande ./configure . Cela analyse notre ordinateur et v\u00e9rifie si tous les outils n\u00e9cessaires \u00e0 la compilation du logiciel que l'on souhaite installer sont bien pr\u00e9sents - s'il y a une erreur, il y a s\u00fbrement des paquets manquants. Il faut le trouver, l'installer puis relancer ./configure jusqu'\u00e0 qu'il n'y ait plus d'erreurs - une fois qu'il n'y a plus d'erreur, lancer la compilation avec la commande make qui cr\u00e9e l'ex\u00e9cutable - installer le programme avec la commande sudo make install . Une fois termin\u00e9, le programme est install\u00e9 et on peut le lancer en \u00e9crivant son nom dans la ligne de commande - pour le d\u00e9sinstaller, ex\u00e9cuter la commande sudo make uninstall depuis le r\u00e9pertoire o\u00f9 il a \u00e9t\u00e9 compil\u00e9. Si on supprime le r\u00e9pertoire avec le code source, on ne pourra plus lancer la commande de d\u00e9sinstallation Les flux de redirection Au lieu d'afficher le r\u00e9sultat d'une commande dans la console (comportement par d\u00e9faut), on peut le rediriger - dans un fichier - en entr\u00e9e d'une autre commande pour effectuer des cha\u00eenes de commandes - dans la \"corbeille\", commande > /dev/null , tout est supprim\u00e9 imm\u00e9diatement, si on ne veut ni l'afficher dans la console ni dans un fichier > et >> permettent de rediriger le r\u00e9sultat dans un nouveau fichier pour > et \u00e0 la fin d'un fichier pour >> echo Bonjour affiche Bonjour dans la console echo Bonjour > test.txt enregistre Bonjour dans un fichier test.txt . Si le fichier existe d\u00e9j\u00e0, il est \u00e9cras\u00e9 echo Bonjour >> test.txt ajoute une ligne au fichier test.txt .Si le fichier n'existe pas, il sera cr\u00e9\u00e9 2>, 2>> et 2>&1 permettent de rediriger les erreurs toutes les commandes produisent deux flux de donn\u00e9es : la sortie standard et la sortie d'erreur . Par d\u00e9faut, les deux s'affichent dans la console avec > et >> , seule la sortie standard est redirig\u00e9e vers le fichier, les erreurs continuent \u00e0 \u00eatre affich\u00e9 dans la console 2> permet de rediriger les erreurs dans un fichier \u00e0 part, par exemple ls -l /root/ > test 2> erreur redirige la sortie standard dans le fichier test et la sortie d'erreur dans le fichier erreur 2>> permet d'ajouter les erreurs \u00e0 la fin du fichier 2>&1 permet de fusionner les sorties dans un seul fichier, par exemple ls -l / > testFusion 2>&1 < et << permet de lire depuis un fichier pour < , et de lire progressivement depuis le clavier pour << l'entr\u00e9e d'une commande vient des param\u00e8tres de la commande, mais elle peut aussi venir d'un fichier ou d'une saisie au clavier cat < fichier affiche le contenu de fichier . La commande cat re\u00e7oit le contenu du fichier qu'elle affiche, alors que la commande cat fichier re\u00e7oit le nom du fichier qu'elle doit d'abord ouvrir pour ensuite afficher son contenu. Le r\u00e9sultat est le m\u00eame mais ce qui se passe derri\u00e8re est diff\u00e9rent << passe la console en mode saisie au clavier ligne par ligne. Toutes ces lignes seront envoy\u00e9es \u00e0 la commande lorsque le mot-cl\u00e9 de fin aura \u00e9t\u00e9 \u00e9crit. Par exemple : wc -m << FIN Combien de caract\u00e8res dans cette phrase ? FIN | permet de cha\u00eener les commandes connecter la sortie d'une commande \u00e0 l'entr\u00e9e d'une autre commande exemple : du | sort -nr | head permet d'afficher les 10 dossiers les plus lourds tri\u00e9s par taille Surveiller l'activit\u00e9 du syst\u00e8me w permet de voir qui est connect\u00e9 et ce qu'ils font l'heure, aussi accessible via date l'uptime, aussi accessible via uptime , qui indique depuis combien de temps l'ordinateur n'a pas \u00e9t\u00e9 red\u00e9marr\u00e9 la charge, aussi accessible via uptime et tload . Il s'agit de la charge moyenne depuis 1, 5 et 15 minutes, plus pr\u00e9cis\u00e9ment le nombre de processus qui r\u00e9clament le processeur. La charge maximale correspond au nombre de processeur, au del\u00e0, il y a surcharge la liste des personnes connect\u00e9s sur la machine, accessible aussi via who free -m mesure la consommation m\u00e9moire. L'option -m permet d'avoir l'information en Mo ps et top pour lister les processus un processus est un programme qui tourne en m\u00e9moire. Certains programmes ne font tourner qu'un processus, d'autres plusieurs comme Chrome qui cr\u00e9e un processus par onglet ps permet d'avoir la liste statique des processus en cours PID est l'identifiant du processus par d\u00e9faut, seul les processus lanc\u00e9s par l'utilisateur dans la console sont affich\u00e9s ps -x affiche l'ensemble des processus de l'utilisateur -a ajoute ceux de tous les utilisateurs -u donne des informations suppl\u00e9mentaires comme le propri\u00e9taire du processus, l'utilisation du processus et de la m\u00e9moire ps -ef permet d'afficher tous les processus et ps -ejH de les afficher en arbre pstree , ou pstree | less affiche l\u2019organisation hi\u00e9rarchique de tous les processus en cours du syst\u00e8me top permet d'avoir la liste dynamique des processus et permet de mesurer la consommation en ressources de chaque processus affiche les processus tri\u00e9 sur le taux d'utilisation du processeur h permet d'afficher l'aide Ctrl + C ou kill pour arr\u00eater un processus Ctrl + C permet d'arr\u00eater un processus lanc\u00e9 en console kill permet d'arr\u00eater proprement un processus lanc\u00e9 en arri\u00e8re-plan en indiquant son PID , par exemple kill 12345 kill -9 permet de tuer un processus sans lui laisser le temps de s'arr\u00eater proprement, s'il refuse de se fermer normalement. Par exemple kill -9 12345 killall permet de tuer tous les processus d'un m\u00eame programme, par exemple killall find \u00e9teindre l'ordinateur halt , poweroff et reboot -p arr\u00eatent le syst\u00e8me en tuant tous les processus sans pr\u00e9venir personne reboot redem\u00e9arre le syst\u00e8me de la m\u00eame mani\u00e8re shutdown arr\u00eate ou red\u00e9marre le syst\u00e8me proprement : shutdown -h now et shutdown -r now Ex\u00e9cuter des programmes en arri\u00e8re-plan un service , ou demon est un processus qui s'ex\u00e9cute en arri\u00e8re-plan plut\u00f4t que sous le contr\u00f4le direct d'un utilisateur & permet de lancer un processus en arri\u00e8re-plan, par exemple cp fichier copie & les messages renvoy\u00e9s par les commandes s'affichent toujours dans la console. On peut donc les envoyer dans un fichier, par exemple find / -name \"*log\" > sortiefind & nohup permet de d\u00e9tacher le processus de la console. Si l'utilisateur se d\u00e9connecte ou si la console est ferm\u00e9e, le processus continuera. Exemple : nohup fichier copie Ctrl+Z met en pause un processus ex\u00e9cut\u00e9 au premier plan, sans & donc bg pour background , passe le processus en pause en arri\u00e8re-plan jobs permet de conna\u00eetre les processus qui tournent en arri\u00e8re-plan fg pour foreground , permet de reprendre un processus au premier plan fg s'il y a un seul processus en arri\u00e8re-plan list\u00e9 dans jobs fg %x s'il y a plusieurs processus en arri\u00e8re-plan pour reprendre le processus x screen est un programme qui permet d'ouvrir plusieurs consoles virtuelles au sein d'une seule et m\u00eame console, et d'ex\u00e9cuter facilement plusieurs processus en parall\u00e8le Ex\u00e9cuter des programmes \u00e0 une heure diff\u00e9r\u00e9e date permet d'afficher la date date \"+%H:%M:%S\" permet de personnaliser l'affichage sudo date MMDDhhmmYYYY permet de modifier la date syst\u00e8me at permet d'ex\u00e9cuter une commande plus tard une seule fois 1) on indique quand on veut ex\u00e9cuter la commande, par exemple at 18:17 ou at 18:17 tomorrow ou at 18:17 04/12/18 (12 avril, attention \u00e0 l'ordre MM/DD/YY) ou encore at now +5 minutes (minutes, hours, days, weeks, months, years) 2) taper la ou les commandes que l'on veut ex\u00e9cuter \u00e0 cette heure l\u00e0 3) faire Ctrl + D . Le symbole <EOT> s'affiche et nous donne le num\u00e9ro de la t\u00e2che (job en anglais) atq permet d'avoir la liste des jobs en attente atrm permet de supprimer un job en attente, par exemple atrm 5 pour supprimer le job n\u00b05 il est possible d'encha\u00eener des commandes : avec le point-virgule, par exemple touch fichier; rm fichier avec les && , par exemple touch fichier && sleep 10 && rm fichier . Les instructions ne s'encha\u00eeneront que si elles se sont correctement ex\u00e9cut\u00e9es sleep permet de faire une pause, par exemple touch fichier; sleep 10; rm fichier ou une pause de 10 secondes aura lieu on peut r\u00e9gler l'unit\u00e9 de sleep qui est par d\u00e9faut la seconde : m pour minute, h pour heure et d pour jour. Exemple : sleep 1m crontab permet ex\u00e9cuter une commande r\u00e9guli\u00e8rement crontab permet de lire et modifier un fichier appel\u00e9 la crontab , qui contient la liste des programmes \u00e0 ex\u00e9cuter r\u00e9guli\u00e8rement, et l'heure \u00e0 laquelle ils soient ex\u00e9cut\u00e9s -l permet d'afficher la crontab, -e la modifier, -r la supprimer sans confirmation syntaxe : m h dom mon dow command pour minute (0-59), hour (0-23), day of month (1-31), month (1-12), day of week (0-6, 0=dimanche) on peut mettre une \u00e9toile \u00e0 la place d'un chiffre pour dire tous les chiffres 3,5,10 pour les 3 valeurs, 3-7 pour les valeurs 3 \u00e0 7, */3 pour les multiples de 3, par exemple 0, 3, 6, 9... le r\u00e9sultat de la commande n'appara\u00eet pas dans la console, il est normalement envoy\u00e9 par mail le rediriger dans un fichier : 45 18 * * * touch /home/louis/fichier >> /home/louis/cron.log 2>&1 le rediriger dans le trou noir pour suppression imm\u00e9diate : * * * * * commande > /dev/null 2>&1 exemples : 45 18 * * * commande est ex\u00e9cut\u00e9 tous les jours \u00e0 18h45 0 0 * * 1 commande tous les lundis \u00e0 minuit (nuit de dimanche \u00e0 lundi) 0 4 1 * * commande tous les premiers du mois \u00e0 4h 0 4 * 12 * commande tous les jours du mois de d\u00e9cembre * * * * * toutes les minutes, c'est la fr\u00e9quence minimale Archiver et compresser tar , pour tape archiver , est un programme d'archivage. Il permet : d'assembler des fichiers dans une archive regroupement des fichiers dans un m\u00eame dossier cr\u00e9ation de l'archive tar : tar -cvf nomArchive.tar nomDossier/ . -c pour la cr\u00e9ation de l'archive, -v pour l'affichage des d\u00e9tails de l'op\u00e9ration et -f pour assembler l'archive dans un fichier d'afficher le contenu d'une archive sans l'extraire, par exemple tar -tf archive.tar d'ajouter un fichier \u00e0 une archive existante, par exemple tar -rvf archive.tar nouveauFichier d'extraire les fichiers d'une archive, par exemple tar -xvf archive.tar avec -x pour extract . Le contenu de l'archive est extrait dans le r\u00e9pertoire courant Les diff\u00e9rents programmes de compression d'une archive - gzip , pour GNU Zip , est le plus connu et le plus utilis\u00e9 - gzip archive.tar compresse l'archive qui devient archive.tar.gz - gunzip archive.tar.gz ou gzip -d archive.tar.gz d\u00e9compresse l'archive qui redevient archive.tar - bzip2 compresse mieux mais plus lentement - bzip2 archive.tar compresse l'archive qui devient archive.tar.bz2 - bunzip2 archive.tar.bz2 ou bzip2 -d archive.tar d\u00e9compresse l'archive qui redevient archive.tar - compress n'est plus utilis\u00e9 car moins performant que gzip et bzip2 - contrairement \u00e0 zip et rar , gzip et bzip2 ne peuvent compresser qu'un seul fichier \u00e0 la fois, c'est pour cela qu'il faut cr\u00e9er une archive tar auparavant Archiver et compresser en m\u00eame temps avec tar - avec gzip - -zcvf permet d'archiver et compresser, par exemple tar -zcvf nomArchive.tar.gz nomDossier/ - -zxvf permet de d\u00e9compresser, par exemple tar -zxvf nomArchive.tar.gz - avec bzip2 - -jcvf permet d'archiver et compresser, par exemple tar -zcvf nomArchive.tar.bz2 nomDossier/ - -jxvf permet de d\u00e9compresser, par exemple tar -zxvf nomArchive.tar.bz2 Lecture d'un fichier compress\u00e9 - on peut compresser directement un fichier en faisant gzip fichier - si on veut le lire, par exemple en faisant cat fichier , des caract\u00e8res bizarres s'affichent \u00e0 cause de la compression. A la place, on peut utiliser zcat , zmore ou zless qui permettent de lire un fichier compress\u00e9. Exemple zmore fichier D\u00e9compresser les zip et les rar - unzip permet de d\u00e9compresser un .zip - exemple unzip archive.zip - -l permet d'afficher le contenu sans l'extraire, par exemple unzip -l archive.zip - zip permet de cr\u00e9er un zip , par exemple zip -r dossier.zip dossier/ - unrar permet de d\u00e9compresser un rar - exemple unrar e toto.rar sans tiret devant le e - unrar l toto.rar permet d'afficher le contenu sans l'extraire - il n'est pas possible gratuitement de cr\u00e9er des rar car c'est un format propri\u00e9taire. Le paquet rar est payant Les connexions \u00e0 distance Les protocoles on peut configurer une machine Linux pour s'y connecter \u00e0 distance \u00e0 condition qu'elle reste allum\u00e9e pour communiquer entre eux, deux ordinateurs doivent utiliser le m\u00eame protocole il en existe plein, par exemple HTTP pour s'\u00e9changer des pages web, FTP protocole de transfert de fichier, IMAP protocole pour s'\u00e9changer des emails... Telnet est un protocole simple cr\u00e9\u00e9 dans les ann\u00e9es 80 pour \u00e9changer des messages en clair d'une machine \u00e0 une autre, qui peuvent donc \u00eatre intercept\u00e9s et lus par n'importe qui SSH est un protocole qui permet de chiffrer les \u00e9changes cr\u00e9ation d'un tunnel s\u00e9curis\u00e9 avec SSH (tout ce fait automatiquement) : utilisation du chiffrement asym\u00e9trique pour s'\u00e9changer une cl\u00e9 de chiffrement sym\u00e9trique : le serveur envoie la cl\u00e9 publique en clair au client pour qu'il puisse chiffrer le client g\u00e9n\u00e8re une cl\u00e9 de chiffrement sym\u00e9trique qu'il chiffre gr\u00e2ce \u00e0 la cl\u00e9 publique qu'il a re\u00e7ue, et l'envoi au serveur, qui d\u00e9chiffre la cl\u00e9 re\u00e7ue gr\u00e2ce \u00e0 sa cl\u00e9 priv\u00e9e ensuite, utilisation du chiffrement sym\u00e9trique pour chiffrer tous les \u00e9changes car le chiffrement asym\u00e9trique est beaucoup plus lent que le chiffrement sym\u00e9trique. une fois le tunnel mis en place, le client peut se connecter au serveur avec son login et son mot de passe Transformer sa machine en serveur et s'y connecter en SSH transformer son pc en serveur : il faut installer le paquet openssh-server sudo apt-get install openssh-server normalement, le serveur SSH sera lanc\u00e9 \u00e0 chaque d\u00e9marrage sudo /etc/init.d/ssh start permet de le lancer \u00e0 tout moment sudo /etc/init.d/ssh stop permet de l'arr\u00eater \u00e0 tout moment au besoin, le fichier de configuration se trouve dans /etc/ssh/ssh_config . Il faut ensuite recharger SSH avec la commande sudo /etc/init.d/ssh reload pour que les changements soient pris en compte se connecter via SSH \u00e0 partir d'une machine Linux ssh login@ip en rempla\u00e7ant login par notre login et ip par l'adresse IP de notre ordinateur que l'on peut obtenir par exemple via le site www.whatismyip.com ou l'IP locale si on se connecte depuis un autre ordinateur sur le m\u00eame reseau local ssh login@localhost ou ssh login@127.0.0.1 permet de se connecter depuis son propre PC exit ou logout permet de se d\u00e9connecter le port 22 est le port utilis\u00e9 par d\u00e9faut par SSH. Si le serveur tourne sur un autre port, il faut le pr\u00e9ciser comme ceci : ssh login@ip -p 12345 si le serveur fonctionne sur le port 12345 le fingerprint du serveur, ou empreinte, est un num\u00e9ro unique qui permet d'identifier le serveur. Si quelqu'un essaie de se faire passer pour le serveur, le fingerprint changera et on sera averti se connecter via SSH \u00e0 partir d'une machine Windows renseigner l'adresse IP dans Host Name et le port (22 par d\u00e9faut) lors de la premi\u00e8re connexion, Putty nous demande une confirmation en nous donnant l'empreinte du serveur le serveur demande le login et le mot de passe. La connexion est maintenant \u00e9tablie L'identification automatique par cl\u00e9 Les m\u00e9thodes les plus utilis\u00e9es pour s'authentifier aupr\u00e8s du serveur sont l'authentification par mot de passe l'authentification par cl\u00e9s publique et priv\u00e9e du client . cette m\u00e9thode \u00e9vite de renseigner son mot de passe \u00e0 chaque fois la cl\u00e9 publique ainsi g\u00e9n\u00e9r\u00e9e doit \u00eatre envoy\u00e9e sur le serveur, la cl\u00e9 priv\u00e9e reste sur le PC du client. La connexion se fait alors sans mot de passe et reste s\u00e9curis\u00e9e Authentification par cl\u00e9 depuis Linux g\u00e9n\u00e9rer une paire de cl\u00e9s publique/priv\u00e9e avec la commande ssh-keygen -t rsa sur le client rsa \u00e9tant un algorithme de chiffrement asym\u00e9trique, on peut aussi utiliser dsa qui est un autre algorithme de chiffrement les cl\u00e9s sont enregistr\u00e9es dans des fichiers. Laisser les valeurs par d\u00e9faut, ~/.ssh/id_rsa.pub pour la cl\u00e9 publique et ~/.ssh/id_rsa pour la cl\u00e9 priv\u00e9e. Le dossier .ssh/ contient aussi un fichier known_hosts qui est la liste des fingerprint que votre PC de client tient \u00e0 jour on nous demande une passphrase qui sert \u00e0 chiffrer la cl\u00e9 priv\u00e9e pour plus de s\u00e9curit\u00e9. On peut ne pas la renseigner si personne d'autre n'utilise le PC ou ne peut lire le fichier contenant la cl\u00e9 priv\u00e9e. envoyer la cl\u00e9 publique au serveur, pour qu'il puisse chiffrer les messages qu'il nous envoi ssh-copy-id -i id_rsa.pub login@ip avec le login et l'ip du serveur on envoie la cl\u00e9 publique id_rsa.pub sur le serveur dans son fichier authorized_keys on peut maintenant se connecter avec la commande ssh login@ip . Si on n'a pas mis de passphrase on est directement connect\u00e9, sinon il faut renseigner la passphrase pour \u00e9viter de renseigner la passphrase \u00e0 chaque fois, on peut utiliser l'agent SSH qui permet de la renseigner une seule fois. C'est un programme qui tourne en m\u00e9moire qui retient les cl\u00e9s priv\u00e9es pendant toute la dur\u00e9e de la session. Lancer le programme avec ssh-add sur le client, qui va lire notre cl\u00e9 priv\u00e9e et va nous demander notre passphrase pour la d\u00e9chiffrer. On peut maintenant se connecter plusieurs fois sur le m\u00eame serveur ou sur diff\u00e9rents serveurs sans retaper le passphrase Authentification par cl\u00e9 depuis Windows avec Putty m\u00eame principe : g\u00e9n\u00e9rer une paire de cl\u00e9s publique/priv\u00e9e sur le client et envoyer la cl\u00e9 publique au serveur g\u00e9n\u00e9rer la paire de cl\u00e9 avec Puttygen en laissant les valeurs par d\u00e9faut. on peut \u00e9ventuellement renseigner une passphrase enregistrer les cl\u00e9s dans des fichiers, par exemple cle.pub et cle.ppk se connecter au serveur avec son login/mdp et ajouter la cl\u00e9 publique dans les cl\u00e9 autoris\u00e9es \u00e0 la fin du fichier : cd .ssh pour aller dans le dossier .ssh de notre dossier personnel puis echo \"cle_publique\" >> authorized_keys se d\u00e9connecter pour configurer Putty pour se connecter avec la cl\u00e9. Dans Connection \u2192 SSH \u2192 Auth , indiquer le chemin du fichier contenant la cl\u00e9 priv\u00e9e, et dans Connection \u2192 Data renseigner le login dans Auto-login username se connecter en cliquant sur Open, le login est d\u00e9j\u00e0 renseign\u00e9, il faut renseigner la passphrase pour \u00e9viter de renseigner la passphrase \u00e0 chaque fois, on peut utiliser l'agent SSH Pageant , install\u00e9 avec Putty. Il est possible de le lancer automatiquement au d\u00e9marrage. Cliquer sur addkey , pr\u00e9ciser l'emplacement du fichier et renseigner la passphrase. Se connecter \u00e0 un serveur en s\u00e9lectionnant Saved Sessions Le transfert de fichiers wget permet de t\u00e9l\u00e9charger des fichiers en indiquant l'adresse HTTP ou FTP exemple wget https://thumbs.dreamstime.com/z/chat-mignon-2507126.jpg -c permet de reprendre un t\u00e9l\u00e9chargement arr\u00eat\u00e9 si le bout de fichier t\u00e9l\u00e9charg\u00e9 est toujours l\u00e0 : wget -c adresseHttp --background permet de laner un t\u00e9l\u00e9chargement en t\u00e2che de fond (tout comme la commande nohup ) scp pour secure copy , permet de copier des fichiers sur le r\u00e9seau d'un ordinateur \u00e0 un autre de mani\u00e8re s\u00e9curis\u00e9e rcp pour remote copy fait la m\u00eame chose sans cryptage syntaxe : scp origine destination , sous la forme login@ip:nom_fichier . Le login et l'IP sont facultatifs. S'ils sont absents, la commande consid\u00e8re que le fichier est sur notre ordinateur exemple : scp louis@12.345.67.890:image.png copie.png copie l'image sur l'ordinateur distant sur mon ordinateur sous le nom copie.png scp louis@12.345.67.890:image.png . fait la m\u00eame copie sans changer le nom du fichier, le . signifie r\u00e9pertoire courant si le serveur SSH sur lequel on se connecte n'est pas sur le port par d\u00e9faut (22), il faut indiquer le num\u00e9ro de port avec -P . Par exemple scp -P 12345 louis@12.345.67.890:image.png . avec un P majuscule contrairement \u00e0 la commande ssh qui utilise le p minuscule pour le port ftp et sftp permettent de transf\u00e9rer des fichiers Le FTP pour File Transfer Protocol est un protocole permettant d'\u00e9changer des fichiers sur le r\u00e9seau. Il est assez ancien (1985) et toujours utilis\u00e9 \u00e0 l'heure actuelle pour transf\u00e9rer des fichiers On l'utilise pour t\u00e9l\u00e9charger depuis un serveur FTP public, notamment lorsqu'on clique sur un lien de t\u00e9l\u00e9chargement via un navigateur. La connexion se fait alors en mode anonyme . On l'utilise aussi pour transf\u00e9rer des fichiers vers un serveur FTP priv\u00e9 (et aussi t\u00e9l\u00e9charger). La connexion se fait donc en mode authentifi\u00e9 FileZilla est un logiciel graphique qui permet de faire des transferts de fichiers via FTP ftp adresseServeurFtp permet de se connecter \u00e0 un serveur FTP exemple : ftp speedtest.tele2.net ou via un navigateur web ftp://speedtest.tele2.net/ sur les serveur public, le login est toujours anonymous et pour le mot de passe, tout fonctionne. On fait ensuite face \u00e0 un prompt ftp> les commandes sont pour la plupart les m\u00eames que celles qu'on connait : ls liste les fichiers du r\u00e9pertoire courant, pwd affiche le chemin du r\u00e9pertoire actuel, cd change de r\u00e9pertoire... pour utiliser les commandes sur son poste, il faut ajouter un point d'exclamation au d\u00e9but, par exemple !pwd pour savoir dans quel r\u00e9pertoire on est sur notre ordinateur put et get permettent d'envoyer un fichier vers le serveur et de t\u00e9l\u00e9charger un fichier depuis le serveur exemple : get fichier.zip pour t\u00e9l\u00e9charger fichier.zip delete permet de supprimer un fichier et non rm bye , exit , quit et Ctrl+D permet de fermer la session sftp est un FTP s\u00e9curis\u00e9 contrairement \u00e0 FTP ou les donn\u00e9es circulent en clair repose sur SSH pour s\u00e9curiser la connexion : sftp login@ip et on nous demande ensuite notre mot de passe (ou connexion via cl\u00e9 publique/priv\u00e9e) les commandes sont globalement les m\u00eames qu'avec ftp , sauf pour supprimer un fichier, il faut utiliser rm et non plus delete par d\u00e9faut, on utilise le port 22 comme pour SSH. Si le port est diff\u00e9rent, il faut le pr\u00e9ciser comme ceci : sftp -oPort=27401 login@ip rsync permet de synchroniser des fichiers pour une sauvegarde permet d'effectuer une synchronisation entre deux r\u00e9pertoires, que ce soit sur le m\u00eame PC ou entre deux ordinateurs reli\u00e9s en r\u00e9seau utilis\u00e9 pour effectuer des sauvegardes incr\u00e9mentielles : rsync compare et analyse les diff\u00e9rences entre deux dossiers puis copie uniquement les changements rsync -arv dossierASauvegarder/ backup/ fait une sauvegarde dans un autre dossier du m\u00eame ordinateur -a conserve les infos sur les fichiers (droits, date de modification...) -r pour sauvegarder tous les sous-dossiers -v mode verbeux pour afficher les d\u00e9tails par d\u00e9faut, rsync ne supprime pas les fichiers dans le r\u00e9pertoire de copie. Il faut ajouter l'option --delete . Exemple : rsync -arv --delete dossierASauvegarder/ backup/ sauvegarder les fichiers supprim\u00e9s --backup garde de c\u00f4t\u00e9 les fichiers supprim\u00e9s qui prennent un suffixe dans le r\u00e9pertoire de sauvegarde --backup-dir=/chemin d\u00e9place les fichiers supprim\u00e9s dans un dossier d\u00e9di\u00e9. Exemple : rsync -arv --delete --backup --backup-dir=/home/louis/backups_supprimes Images/ backups/ --exclude permet d'exclure un dossier de la sauvegarde rsync permet de sauvegarder sur un autre ordinateur, le plus couramment en utilisant SSH rsync -arv --delete --backup --backup-dir=/home/louis/fichiersSupprimes Images/ louis@ip:backup/ rsync -arv --delete --backup --backup-dir=/home/louis/fichiersSupprimes Images/ louis@ip:backup/ -e \"ssh -p 12345\" si le serveur SSH \u00e9coute sur un autre port que celui par d\u00e9faut Le r\u00e9seau adresse IP : chaque ordinateur reli\u00e9 \u00e0 Internet est identifi\u00e9 par une adresse IP format IPv4 : 86.172.120.28 format IPv6 : fe80::209:62fa:fb80:29f2 nom d'h\u00f4te, hostname en anglais, \u00e9quivalent \u00e0 l'IP mais plus simple \u00e0 retenir host donne le nom d'h\u00f4te \u00e0 partir de l'adresse IP et inversement. Exemple : host siteduzero.com et host 92.243.25.239 les serveurs DNS fournissent la liste des correspondances IP <-> noms d'h\u00f4te le fichier /etc/hosts permet de modifier la liste de correspondance personnalis\u00e9e de notre ordinateur, par exemple ajouter un nom d'h\u00f4te \u00e0 chaque PC pour s'y connecter sans retenir l'IP whois donne des renseignements sur un nom de domaine. Exemple : whois siteduzero.com ifconfig liste les interfaces r\u00e9seau et permet aussi de faire des r\u00e9glages r\u00e9seau exemple : eth0 pour une connexion par c\u00e2ble r\u00e9seau, lo pour la boucle locale, c'est-\u00e0-dire une connexion \u00e0 soi-m\u00eame, wlan0 pour une connexion sans-fil Wi-Fi ifconfig interface etat permet d'activer/d\u00e9sactiver une interface r\u00e9seau, par exemple ifconfig eth0 down ou ifconfig eth0 up netstat permet d'avoir des statistiques sur le r\u00e9seau netstat -i donnent des stats par interface r\u00e9seau netstat -uta liste toutes les connexions ouvertes -u pour les connexions UDP, -t pour les connexions TCP, -a pour afficher toutes les connexions quelque soit leur \u00e9tat permet de voir les ports sur lequels se sont les connexions. -n permet d'avoir les num\u00e9ros des ports plutot qu'une description en toutes lettres -l permet de filter uniquement les connexions \u00e0 l'\u00e9tat LISTEN netstat -s permet d'avoir des statistiques r\u00e9sum\u00e9es iptables est un pare-feu Linux. Il permet d'\u00e9tablir des r\u00e8gles \u00e0 quels ports on peut se connecter \u00e0 votre ordinateur \u00e0 quels ports vous avez le droit de vous connecter filtrer par IP iptables -L affiche les r\u00e8gles actuellement en place Chain INPUT correspond aux r\u00e8gles manipulant le trafic entrant, Chain FORWARD correspond aux r\u00e8gles manipulant la redirection du trafic, Chain OUTPUT correspond aux r\u00e8gles manipulant le trafic sortant policy ACCEPT signifie que par d\u00e9faut, tout le trafic est accept\u00e9, alors que policy DROP permet de resufer toutes les connexions que nous n'avons pas autoris\u00e9 iptables -F permet de r\u00e9initialiser toutes les r\u00e8gles iptables l'ajout et la suppression de r\u00e8gles : TODO Les scripts bash Introduction il existe plusieurs environnements console que l'on appelle shell le shell est le programme qui g\u00e8re l'invite de commandes et ses fonctionnalit\u00e9s comme l'historique des commandes, l'autocompl\u00e9tion, la d\u00e9finition des alias... les fonctionnalit\u00e9s offertes par l'invite de commandes peuvent varier en fonction du shell que l'on utilise les principaux shells sont : sh pour Bourne Shell , l'anc\u00eatre de tous les shells bash pour Bourne Again Shell , une am\u00e9lioraton de sh*, shell par d\u00e9faut de la plupart des distributions Linux et aussi de Mac OS X ksh , csh , tcsh , zsh chsh pour Change Shell permet de changer de shell la programmation shell est un minilangage de programmation int\u00e9gr\u00e9 \u00e0 Linux un script shell permet d'automatiser une s\u00e9rie de commandes. On cr\u00e9e pour cela un fichier contenant la liste des commandes \u00e0 ex\u00e9cuter, appel\u00e9 script shell. On dit que l'on fait de la programmation shell un script shell d\u00e9pend d'un shell pr\u00e9cis, le langage n'est pas exactement le m\u00eame selon le shell quel 'on utilse' on va utiliser bash Cr\u00e9ation d'un script bash par convention, on donne l'extension .sh aux scripts shell. Ce n'est pas obligatoire, \u00e7a fonctionne sans extension indiquer sur la premi\u00e8re le ligne le nom du shell utilis\u00e9 : #!/bin/bash il suffit ensuite d'\u00e9crire les commandes \u00e0 ex\u00e9cuter les unes apr\u00e8s les autres, chacune sur une ligne diff\u00e9rente les lignes commen\u00e7ant par # sont des lignes de commentaires, la premi\u00e8re ligne du sha-bang fait exception Ex\u00e9cution d'un script rendre ex\u00e9cutable le fichier : chmod u+x script.sh ou chmod +x script.sh ex\u00e9cuter le script : ./script.sh en \u00e9tant dans le r\u00e9pertoire du script, ou alors taper le chemin entier, par exemple /home/louis/scripts/test.sh ex\u00e9cuter le script en mode d\u00e9bug : bash -x script.sh , ce qui affiche le d\u00e9tail de l'ex\u00e9cution du script pour ne plus taper ./ devant le nom des scripts, il faut les placer dans un des r\u00e9pertoires du PATH , qui est une variable syst\u00e8me qui indique une liste des r\u00e9pertoires qui contiennent des ex\u00e9cutables que l'on souhaite pouvoir lancer sans indiquer leur r\u00e9pertoire. echo $PATH permet d'avoir cette liste, comme /bin ou /usr/bin . Pour ex\u00e9cuter le script, il n'y a plus qu'\u00e0 faire script.sh Afficher et manipuler une variable d\u00e9clarer une variable : nomVariable='valeur de la variable' sans espace autour du = si on utlise des apostrophes, il faut les \u00e9chapper : nomVariable='Bonjour, c\\'est moi' les back quotes ** `** (Alt Gr + 7) demandent \u00e0 bash d'ex\u00e9cuter ce qui se trouve \u00e0 l'int\u00e9rieur. Par exemple, la commande suivante ex\u00e9cute la commande *pwd* : ```bash message= pwd` echo \"Vous \u00eates dans le dossier $message\" bash Vous \u00eates dans le dossier /home/louis/bin ``` afficher une variable : echo $nomVariable va afficher le contenu de nomVariable echo 'Le message est : $message' va afficher Le message est : $message car le contenu n'est pas analys\u00e9 avec des simples quotes mais affich\u00e9 tel quel echo \"Le message est : $message\" va afficher Le message est : Bonjour car le contenu est analys\u00e9 avec des doubles quotes et les caract\u00e8res sp\u00e9ciaux comme les variables sont interpr\u00e9t\u00e9s read demande \u00e0 l'utilisateur de saisir du texte, qui sera stock\u00e9 dans une variable exemple : bash read var1 var2 echo \"Bonjour $var1 $var2\" L'utilisateur est invit\u00e9 \u00e0 taper du texte (1\u00e8re ligne) avant de voir le r\u00e9sultat s'afficher bash Louis Varlet Bonjour Louis Varlet -p permet d'afficher un message de prompt : read -p 'Entrez votre nom : ' nom -n limite le nombre de caract\u00e8res : read -n 5 nom -t limite le temps de saisie -s masque les caract\u00e8res saisis let permet d'effectuer des op\u00e9rations math\u00e9matiques sans pr\u00e9ciser let , les variables sont des cha\u00eenes de caract\u00e8res exemple : let \"a = 5\" , let \"b = 2\" , let \"c = a + b\" , echo $c . Ce dernier retournera 7 les op\u00e9rations : addition (+), soustraction (-), multiplication (*), division enti\u00e8re (/), puissance (**) et modulo (%) les variables d'environnement utilisable dans n'importe quel programme, on parle aussi de variables globales env ou printenv permet de lister toutes celles qui sont en m\u00e9moire : SHELL qui indique le type de shell en cours d'utilisation, PATH vu avant, EDITOR qui indique l'\u00e9diteur de texte par d\u00e9faut, HOME qui indique la position du dossier home , PWD , OLDPWD ... printenv VARIABLE affiche la valeur de la variable d'environnement VARIABLE on peut les utiliser en les appelant par leur nom : echo \"Votre \u00e9diteur par d\u00e9faut est $EDITOR\" les variables de param\u00e8tres les scripts bash acceptent des param\u00e8tres : ./script.sh param1 param2 pour les r\u00e9cup\u00e9rer : $# contient le nombre de param\u00e8tres $0 contient le nom du script $1 contient le 1er param\u00e8tre, ..., $9 contient le 9e param\u00e8tre exemple : echo \"Le param\u00e8tre 1 est $1\" les tableaux ils contiennent plusieurs cases, par exemple tableau=('valeur0' 'valeur1' 'valeur2') pour y acc\u00e9der, ${tableau[2]} , la num\u00e9rotation commence \u00e0 0 on peut aussi d\u00e9finir le contenu d'une case : tableau[2]='valeur2' on peut afficher l'ensemble du contenu du tableau d'un seul coup en utilisant ${tableau[*]} Les conditions Les boucles Les fonctions","title":"Sommaire"},{"location":"#tutoriel-linux","text":"","title":"Tutoriel Linux"},{"location":"#raccourcis-utiles","text":"Alt + Ctrl + T permet d'ouvrir un terminal Ctrl + D fin de fichier, ou exit . ferme le terminal Tab permet de faire de l\u2019auto-compl\u00e9tion Ctrl + R permet de faire une recherche parmi les commandes pr\u00e9c\u00e9dentes Ctrl + C arr\u00eate la commande en cours Ctrl + L ou clear efface le contenu de la console Shift + PgUp et Shift + PgDown pour monter et descendre dans la console Ctrl + A ram\u00e8ne le curseur au d\u00e9but de la commande, Ctrl + E ou Fin ram\u00e8ne le curseur \u00e0 la de la commande Ctrl + U supprime ce qui se trouve \u00e0 gauche du curseur, Ctrl + K ce qui se trouve \u00e0 droite Ctrl + W supprime le premier mot \u00e0 gauche du curseur, utile pour supprimer ke param\u00e8tre \u00e0 gauche du curseur Ctrl + Y permet de coller le texte coup\u00e9 avec Ctrl + U , Ctrl + K ou Ctrl + W","title":"Raccourcis utiles"},{"location":"#les-repertoires","text":"/bin pour binaires contient les commandes dont le syst\u00e8me \u00e0 besoin pour d\u00e9marrer /boot est le r\u00e9pertoire o\u00f9 Linux range ce qu'il faut pour d\u00e9marrer. Les fichiers vmlinuz sont les diff\u00e9rents noyaux, on en utilise un seul \u00e0 la fois /dev pour device ou p\u00e9riph\u00e9rique en fran\u00e7ais, contient un fichier pour chaque p\u00e9riph\u00e9rique /etc pour Editable Text Configuration ou configuration \u00e9ditable par texte /lib pour libraries ou biblioth\u00e8qes contient les biblioth\u00e8ques partag\u00e9es par /bin et /sbin /media et /mnt sont les points de montage du syst\u00e8me. /run est un ajout r\u00e9cent qui doit prendre la rel\u00e8ve de /media . Les p\u00e9riph\u00e9riques amovibles doivent \u00eatre mont\u00e9s lors de leur insertion et d\u00e9monter lorsqu'on l'enl\u00e8ve /proc et /sys contiennent un syt\u00e8me de fichiers \"volatile\" qui fournit des infos sur le syst\u00e8me /root est le r\u00e9pertoire de l'utilisateur root /sbin pour system binaries ou binaires syst\u00e8me contient des ex\u00e9cutables pour l'administrateur comme partitionner ou formation des disques, configurer le r\u00e9seau... /usr pour Unix System Resources contient tout ce qui n'est pas utile au fonctionnement minimal du syst\u00e8me. Les applications se trouvent pour la plupart ici. /usr/bin est \u00e9quivalent \u00e0 C:\\Program Files de Windows. /tmp est le r\u00e9pertoire temporaire du syst\u00e8me /var contient des fichiers variables, cr\u00e9es par des serivces, c'est-\u00e0-dire des logiciels qui tournent en t\u00e2che de fond","title":"Les r\u00e9pertoires"},{"location":"#les-types-de-fichier","text":"r\u00e9pertoire avec une barre oblique \u00e0 la fin (couleur par d\u00e9faut : bleu) fichier r\u00e9gulier non ex\u00e9cutable sans suffixe (couleur par d\u00e9faut : noir ou blanc) lien symbolique avec un @ \u00e0 la fin, \u00e9quivalent du raccourci sous Windows (couleur par d\u00e9faut : turquoise) fichier r\u00e9gulier ex\u00e9cutable avec un * \u00e0 la fin (couleur par d\u00e9faut : vert)","title":"Les types de fichier"},{"location":"#les-commandes-de-base","text":"date donne la date et l'heure time { commande ; } ex\u00e9cute commande et donne son temps d'ex\u00e9cution gucharmap affiche la table de caract\u00e8res history affiche la liste des commandes que l'on a saisi !num permet de r\u00e9p\u00e9ter une commande d\u00e9j\u00e0 effectu\u00e9e, par exemple !245 pwd pour Print Working Directory affiche le dossier courant file fichier pr\u00e9cise le type de fichier ls pour list , liste les fichiers et dossiers du r\u00e9pertoire courant. ls /usr liste les fichiers du r\u00e9pertoire usr . -a ou --all affiche les fichiers et dossiers cach\u00e9s -A affiche tout comme -a sauf les dossiers ./ (dossier courant) et ../ (dossier parent) -F indique le type d'\u00e9l\u00e9ment (dossier, fichier, raccourci...) -l liste d\u00e9taill\u00e9e (droits, nombre de liens physiques, nom du propri\u00e9taire, nom du groupe, taille du fichier en octets, date derni\u00e8re modification, nom du fichier). Avec lh , le h pour Human Readable permet d'avoir la taille du fichier en Ko, Mo... ls -l prefixe* permet de lister seulement les fichiers commen\u00e7ant par prefixe -d pour Directory qui affiche le r\u00e9pertoire au lieu d'afficher le contenu. Pour afficher les informations d\u00e9tailles du r\u00e9pertoire sans son contenu : ls -ld -t trie par date de derni\u00e8re modification. On voit en premier le dernier fichier modifi\u00e9. -r renverse l'ordre d'affichage des fichiers -R pour recursive , affiche les sous-dossiers et leur contenu exemple de combinaison des commandes : ls -larth cd Change Directory , c'est-\u00e0-dire changer de dossier. Sans param\u00e8tre, ram\u00e8ne dans le home personnel chemin absolu : on part de la racine : cd /home/gaetan/documents chemin relatif : on part du dossier courant. Exemple si on est dans /home/gaetan : cd documents cd .. pour remonter dans le dossier parent du Disk Usage informe sur la taille que les dossiers occupent. \u00e0 combiner avec -h : du -h -a pour avoir la taille des dossiers ET des fichiers du -ah -s pour avoir juste le total : du -sh echo affiche une ligne de texte et peut l'enregistrer dans un fichier echo Bonjour affiche Bonjour dans la console echo Bonjour > test.txt enregistre Bonjour dans un fichier test.txt . Si le fichier existe d\u00e9j\u00e0, il est \u00e9cras\u00e9. echo Bonjour >> test.txt ajoute une ligne au fichier test.txt cat affiche tout le contenu d'un fichier, et peut en concat\u00e9ner cat test.txt affiche le contenu du fichier cat -n test.txt affiche le contenu du fichier avec les num\u00e9ros de ligne cat test.txt test2.txt affiche le contenu des deux fichiers cat fichier1 fichier2 fichier3 > grosfichier enregistre le contenu des trois fichiers dans un seul pour \u00e9crire dans un fichier sur plusieurs lignes, par exemple 2 lignes : cat > test.txt << FIN ligne1 ligne2 FIN more et less pour afficher les gros fichiers, page par page. Ce sont des logiciels de pagination/visualisation de fichiers texte, on ne peut pas modifier les fichiers avec. more est plus ancien, less plus r\u00e9cent et plus complet more fichier.txt affiche le texte en remplissant un \u00e9cran puis s'arr\u00eate. Pour continuer, il faut : Entr\u00e9e pour avancer ligne \u00e0 ligne Espace pour avancer page \u00e0 page Q pour sortir du mode de visualisation B pour reculer page par page une fois arriv\u00e9 au bout du fichier, on sort du mode de visualisation less est un autre logiciel de visualisation = permet de savoir \u00e0 quelle ligne on est et \u00e0 quel pourcentage du fichier m\u00eames commandes avec quelques avantages : ne quitte pas le mode de visualisation \u00e0 la fin du fichier possibilit\u00e9 de naviguer avec les fl\u00e8ches du clavier fonction de recherche /maChaine . Toutes les occurrences sont affich\u00e9s en surbrillance. Naivguer avec n et N pour passer d'occurrence en occurrence. head et tail permettent d'afficher le d\u00e9but et la fin d'un fichier, par d\u00e9faut 10 lignes. On peut sp\u00e9ficier le nombre de lignes que l'on veut afficher. head -n 4 fichier affiche les 4 premi\u00e8res lignes de fichier tail fichier affiche les 10 derni\u00e8res lignes du fichier tail -f fichier pour follow permet d'afficher la fin du fichier au fur et \u00e0 mesure de son \u00e9volution touch monFichier cr\u00e9e un fichier vide monFichier s'il n'existe pas, sinon modifie l'horodatage du fichier si le fichier existe mkdir , pour Make Directory , sert \u00e0 cr\u00e9er un nouveau r\u00e9pertoire en sp\u00e9cifiant le nom de ce dernier ou en sp\u00e9cifiant le chemin complet mkdir monDossier ou mkdir monDossier monDossier2 pour en cr\u00e9er plusieurs \u00e0 la fois mkdir -p monDossier1/monDossier2 avec l'option -p pour parent pour cr\u00e9er un dossier et un sous-dossier dedans on peut utiliser l'option -v ou --verbose pour avoir des informations sur la cr\u00e9ation pour g\u00e9rer les espaces, 3 possibilit\u00e9s : mkdir \"Mes documents\" , mkdir 'Mes documents' ou mkdir Mes\\ documents tree permet de voir l'arborescence dans le r\u00e9pertoire courant tree monDossier permet de voir l'arborescence d'un sous-dossier du r\u00e9pertoire courant -d n'affiche que les dossiers, -a affiche les dossiers et fichiers cach\u00e9s cp pour copy permet de copier des fichiers et des r\u00e9pertoires cp fichier fichier2 copie le fichier dans le m\u00eame r\u00e9pertoire cp fichier.txt /cheminDestination copie le fichier dans un autre r\u00e9pertoire cp fichier.txt /dossier/fichier2.txt copie le fichier dans un autre r\u00e9pertoire en le renommant cp -R Fichiers/ /tmp/ ou cp -r Fichiers/ /tmp/ permet de copier un r\u00e9pertoire entier avec tout son contenu ( -R pour recursive ) dans le r\u00e9pertoire sp\u00e9cifi\u00e9 cp -R dossier/ copieDossier permet de copier l'int\u00e9gralit\u00e9 du r\u00e9pertoire dans un r\u00e9pertoire d'un autre nom cp -R dossier/ ../copieDossier permet de copier l'int\u00e9gralit\u00e9 du r\u00e9pertoire dans un r\u00e9pertoire d'un autre nom dans un autre endroit du syst\u00e8me mv pour move permet de d\u00e9placer et renommer des fichiers et des r\u00e9pertoires mv fichier dossier/ d\u00e9place fichier dans dossier mv dossier1 dossier2/ d\u00e9place dossier1 et son contenu dans dossier2 mv dossier/fichier ./ d\u00e9place fichier qui est dans dossier dans le r\u00e9pertoire courant mv fichier fichierRenomm\u00e9 renomme fichier en fichierRenomm\u00e9 , fonctionne aussi pour les dossiers mv fichier dossier/fichierRenomm\u00e9 d\u00e9place et renomme le fichier en une seule commande rm et rmdir pour remove et remove directory permettent de supprimer des fichiers et des dossiers rm fichier supprime fichier sans demande de confirmation, le fichier est perdu \u00e0 jamais rm -i fichier pour interactive demande une confirmation avant la suppression rm -f fichier pour force force la suppression si la demande de confirmation est syst\u00e9matique, par exemple avec l'ajout d'un alias sur la commande rm rmdir dossier supprime dossier seulement s'il est vide rm -r dossier pour recursive , supprime dossier et tout son contenu ln permet de cr\u00e9er des liens (raccourcis) entre fichiers. Il existe 2 types de liens : liens physiques : ln fichier1 fichier2 cr\u00e9e fichier2 qui partage le m\u00eame inode (contenu du fichier) que fichier1 ls -i permet d'afficher le num\u00e9ro d'inode pour v\u00e9rifier si les fichiers sont associ\u00e9s au m\u00eame inode Une modification dans l'un entra\u00eene une modification dans l'autre. Si on supprime l'un des 2 fichiers, l'autre reste en place et le contenu est toujours le m\u00eame. Il faut supprimer les 2 pour supprimer le contenu. liens symboliques : ln -s fichier1 fichier2 pour symbolique . Cr\u00e9e fichier2 qui pointe sur fichier1 . ressemble davantage au \"raccourci\" sous Windows, c'est-\u00e0-dire qu'on cr\u00e9e un lien vers un autre fichier on \u00e9dite le m\u00eame contenu dans fichier1 et fichier2 fonctionnent sur des r\u00e9pertoires contrairement aux liens physiques qui ne fonctionnent que sur les fichiers si on supprime fichier2 , rien de mal. Si on supprime fichier1 , fichier2 pointe vers un fichier qui n'existe plus, on parle de lien mort alias concerne les alias de commande, qui sont des raccourcis alias permet de voir les alias existants alias rm='rm -i' permet de cr\u00e9er un alias. Cette cr\u00e9ation n'est pas persistante, elle dispara\u00eet en fermant la console la documentation man pour manual affiche le manuel d'une commande comme avec la commande less : man mkdir . /test pour rechercher test dans la documentation. La documentation man est aussi disponible sur internet apropos permet de chercher les commandes en rapport \u00e0 un terme, par exemple apropos sound --help donne une information proche de celle de man , par exemple mkdir --help whatis donne juste le nom de la commande pour comprendre ce qu'elle fait, par exemple whatis mkdir info affiche un manuel en ligne encore plus complet que man , par exemple info mkdir rechercher des fichiers locate fichier pour une recherche rapide sur la base de donn\u00e9es des fichiers qui est mise \u00e0 jour toutes les 24 heures. Pour la mettre \u00e0 jour, lancer la commande sudo updatedb find pour une recherche approfondie, en parcourant les fichiers sur le disque, ce qui peut \u00eatre long. La commande s'utilise avec des param\u00e8tres find \"o\u00f9\" \"quoi\" \"que faire avec\" . Seul \"quoi\" est obligatoire. o\u00f9 est le dossier dans lequel on fait la recherche, ainsi que tous ses sous-dossiers. Si non renseign\u00e9, recherche dans le dossier courant quoi fichier ou dossier \u00e0 rechercher, par nom, date de cr\u00e9ation, taille... que faire avec on peut faire un post-traitement. Par d\u00e9faut, la commande affiche la liste des fichiers trouv\u00e9s, mais d'autres actions sont possibles -iname option qui permet d'ignorer la casse pour faire la recherche, par exemple find /etc/ -iname 'readme' exemples : find -name \"README.md\" recherche un fichier dans le r\u00e9pertoire courant qui s'appelle exactement README.md . On peut utiliser l'\u00e9toile pour rechercher des noms incomplets, par exemple : find -name \"READM*\" find /var/log/ -name \"syslog\" find /etc -type d permet d'afficher tous les r\u00e9pertoires et sous-r\u00e9pertoires du dossier find -size +10M permet de rechercher les fichiers de plus de 10Mo. On peut utiliser le - au lieu de + , et le k ou le G \u00e0 la place du M find -name \"*.md\" -atime 6 recherche les fichiers au format markdown modifi\u00e9 il y a moins de 7 jours (0 pour 1 jour). On peut enlever le - pour modifi\u00e9 exactement il y a x jours -type d et -type f permet de limiter la recherche aux r\u00e9pertoires ou aux fichiers, par exemple find -name \"syslog\" -type d find -name \"README.md\" -print permet d'afficher les r\u00e9sultats, ce qui correspond au r\u00e9sultat par d\u00e9faut find -name \"README.md\" -printf permet de formater le r\u00e9sultat affich\u00e9, par exemple find -name \"README.md\" -printf \"%p - %u\\n\" -delete permet de supprimer les fichiers trouv\u00e9s, par exemple find -name \"README.md\" -delete -exec , permet d'appeler une commande qui effectuera une action sur chacun des fichiers trouv\u00e9s find /bin -size +200k -exec ls -l \\{} \\; permet d'effectuer un ls -l sur les r\u00e9sultats de la recherche. {} symbolise le r\u00e9sultat de la recherche find /bin -size +200k | xargs ls -l . xargs sert \u00e0 construire et ex\u00e9cuter des lignes de commande \u00e0 partir de l\u2019entr\u00e9e standard manipulations dans les fichiers awk est un langage de traitement de lignes qui sert \u00e0 manipuler des fichiers textes awk NR==5 fichier affiche la 5e ligne de fichier awk NR==2,NR==4 fichier affiche les lignes 2 \u00e0 4 de fichier sed , pour stream editor sed -n 5p fichier affiche la 5e ligne de fichier sed -n 2,4p fichier affiche les lignes 2 \u00e0 4 de fichier grep permet de filtrer des donn\u00e9es grep texte fichier permet de chercher texte dans fichier , par exemple grep alias .bashrc permet de chercher le mot alias dans le fichier .bashrc et affiche toutes les lignes du fichier comportant ce mot -i pour ne pas tenir compte de la casse, grep -i texte fichier -n pour afficher les num\u00e9ros de lignes -v permet d'inverser la recherche et d'afficher uniquement les lignes qui ne contiennent pas le mot recherch\u00e9 -c permet de compter le nombre de lignes au lieu de les afficher -r permet de faire une recherche r\u00e9cursive dans tous les sous-dossiers et fichiers, par exemple grep -r machaine dossier/ . Le nom du fichier o\u00f9 la cha\u00eene a \u00e9t\u00e9 trouv\u00e9 s'affiche au d\u00e9but de la ligne -E permet d'utiliser des expressions r\u00e9guli\u00e8res on peut utiliser egrep \u00e0 la place de grep -E -E n'est pas obligatoire car les expressions r\u00e9guli\u00e8res sont activ\u00e9es de base sur Linux. C'est utile sur les autres syst\u00e8mes Unix . caract\u00e8re quelconque, ^ d\u00e9but de ligne, $ fin de ligne, [] un des caract\u00e8res entre les crochets, ? l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent est optionnel (peut \u00eatre pr\u00e9sent 0 ou 1 fois), * l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent peut \u00eatre pr\u00e9sent 0, 1 ou plusieurs fois, + l\u00b2'\u00e9l\u00e9ment pr\u00e9c\u00e9dent doit \u00eatre pr\u00e9sent 1 ou plusieurs fois, | ou, () groupement d'expressions par exemple grep -E ^alias .bashrc pour rechercher le mot alias uniquement en d\u00e9but de ligne grep -E [Aa]lias .bashrc renvoie les lignes qui contiennent alias ou Alias grep -E [0-4] .bashrc renvoie les lignes qui contiennent un chiffre entre 0 et 4 sort permet de trier les lignes sort fichier trie les lignes du fichier par ordre alphab\u00e9tique et affiche le r\u00e9sultat dans la console, en ignorant la casse -o permet d'\u00e9crire le r\u00e9sultat dans un fichier : sort -o resultatTri\u00e9 fichierATrier -r permet de trier en ordre inverse, sort -r fichier -R permet de trier al\u00e9atoirement -n permet de trier des nombres. Sans cette option, ils sont tri\u00e9s alphab\u00e9tiquement donc par exemple 150 serait avant 18 wc pour word count permet de compter le nombre de lignes, de mots, de caract\u00e8res, d'octets wc fichier retourne le nombre de lignes, de mots et d'octets -l retourne le nombre de lignes, wc -l fichiers -w retourne le nombre de mots -c retourne le nombre d'octets -m retourne le nombre de caract\u00e8res uniq permet de supprimer les doublons (lignes identiques) seulement si elles se suivent, il faut donc travailler sur un fichier tri\u00e9 uniq fichier affiche dans la console la liste des lignes sans doublons uniq fichierATraiter fichierSansDoublons enregistre le r\u00e9sultat dans un fichier -c compte le nombre d'occurence, affiche devant chaque ligne le nombre de fois qu'elle est pr\u00e9sente dans le fichier, par exemple uniq -c fichier -d affiche uniquement les lignes pr\u00e9sentes plusieurs fois cut permet de couper les lignes d'un fichier afin de conserver uniquement une partie de chaque ligne -c pour couper selon le nombre de caract\u00e8res. cut -c 2-5 noms.txt affiche les caract\u00e8res 2 \u00e0 5 de chaque ligne, cut -c -3 du 1er au 3 et cut -c 3- du 3e au dernier couper selon un d\u00e9limiteur, -d pour pr\u00e9ciser le d\u00e9limiteur, -f pour indiquer le num\u00e9ro du ou des champs \u00e0 couper. cut -d , -f 1 fichier conserve le 1er champ de chaque ligne, -f 2-4 conserve les champs 2, 3 et 4, -f 1,3 les champs 1 et 3","title":"Les commandes de base"},{"location":"#les-editeurs-de-texte","text":"Il en existe plusieurs. Les plus connus sont Nano, Vim et Emacs. - Nano - \u00e9diteur de texte simple compar\u00e9 \u00e0 Vim et Emacs - nano pour lancer l'\u00e9diteur vide - nano fichier lance l'\u00e9diteur en ouvrant le fichier - -m pour autoriser l'utilisation de la souris - -i pour l'indentation automatique, c'est-\u00e0-dire que la tabulation de la ligne pr\u00e9c\u00e9dente sera respect\u00e9 lorsqu'on va \u00e0 la ligne - Nano se configure dans le fichier .nanorc , situ\u00e9 \u00e0 la racine du home pour son propre fichier de configuration ( /home/user/.nanorc ), o\u00f9 dans le fichier nanorc situ\u00e9 dans le dossier etc ( /etc/nanorc ). Ce dernier n\u00e9cessite d'\u00eatre en root pour le modifier. Il contient d\u00e9j\u00e0 plusieurs options mises en commentaires pour l'exemple Emacs : puissant \u00e9diteur de texte d\u00e9velopp\u00e9 par Richard Stallman, le fondateur du projet GNU Vim : autre puissant \u00e9diteur de texte g\u00e9n\u00e9ralement disponible par d\u00e9faut sur Linux Vi existe en plusieurs versions : vi , le clone elvis , vim (VI iMproved, version am\u00e9lior\u00e9e de Vi),ou encore gvim dot\u00e9e d'une interface graphique Vimtutor pour apprendre \u00e0 s'en servir","title":"Les \u00e9diteurs de texte"},{"location":"#configuration-de-la-console","text":"Il faut modifier le fichier .bashrc personnel situ\u00e9 dans le r\u00e9pertoire personnel, ou le fichier bashrc global situ\u00e9 dans le r\u00e9pertoire /etc/bash.bashrc . On peut par exemple personnaliser l'invite de commande, ou aussi y cr\u00e9er des alias qui sont persistants. Il existe \u00e9galement un fichier ~/.profile et un fichier /etc/profile qui est lu dans les consoles o\u00f9 on se logue (les consoles Alt+Ctrl+F1 \u00e0 F6), alors que le .bashrc est lu dans les consoles o\u00f9 on ne se logue pas, comme les consoles en mode graphique. Le .profile fait appel au .bashrc par d\u00e9faut, donc faire des modifications dans le .bashrc modifiera les options pour les consoles avec et sans login.","title":"Configuration de la console"},{"location":"#les-utilisateurs-et-les-droits","text":"Chaque personne \u00e0 son propre compte utilisateur avec des droits limit\u00e9s. Il existe un super-utilisateur appel\u00e9 root qui a tous les droits, qui ne doit servir que rarement, lorsque c'est n\u00e9cessaire. sudo pour Substitute User DO ou encore faire en se substituant \u00e0 l'utilisateur, permet de devenir root temporairement le temps d'ex\u00e9cuter une commande en faisant sudo commande sudo su pour switch user , permet de devenir root et de le rester dans Ubuntu su - est suffisant dans les autres distributions, le tiret rend accessible certains programmes destin\u00e9s seulement \u00e0 root, et nous place dans le dossier personnel de root ( /root ) le symbole # \u00e0 la fin de l'invite de commandes indique que l'on est devenu super-utilisateur exit permet de quitter le mode root , permet aussi de fermer la console dans une session normale su - test permet de se connecter avec le compte utilisateur test , le tiret indique que l'on souhaite utiliser ses variables d'environnement whoami permet de savoir avec quel utilisateur on est connect\u00e9 id permet d'afficher l'UID (User Identification), le GID (Group Identification) et la liste de groupe secondaires de l'utilisateur connect\u00e9, par exemple affiche uid=1000(gaetan) gid=1000(gaetan) groupes=1000(gaetan),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),130(sambashare) id user affiche les m\u00eames informations pour l'utilisateur user id -u affiche uniquement le num\u00e9ro uid id -g affiche uniquement le num\u00e9ro gid id -gn affiche uniquement le nom du groupe id -Gn ou groups affiche les noms des groupes dont l'utilisateur est membre finger user affiche les donn\u00e9es GECOS de user , c'est-\u00e0-dire son login, son nom, son home, son shell, etc... le fichier /etc/passwd contient les informations des utilisateurs concernant leur connexion, par exemple : gaetan:x:1000:1000:Ga\u00ebtan Varlet,,,:/home/gaetan:/bin/bash . utilisateur root, uid=0 utilisateurs syst\u00e8me, uid compris entre 1 et 99 utilisateurs normaux avec uid sup\u00e9rieur ou \u00e9gal \u00e0 1000 les mdp sont dans le fichier /etc/shadow , uniquement accessible par root","title":"Les utilisateurs et les droits"},{"location":"#gestion-des-utilisateurs","text":"commandes r\u00e9serv\u00e9s \u00e0 root adduser permet d'ajouter un utilisateur, avec au minimum le nom d'utisateur \u00e0 cr\u00e9er, par exemple adduser louis r\u00e9pertoire personnel est cr\u00e9\u00e9 on doit choisir un mot de passe passwd permet de changer le mot de passe du compte en param\u00e8tre, par exemple passwd louis sans param\u00e8tre, c'est le mdp de l'utilisateur connect\u00e9 que l'on modifie deluser permet de supprimer un compte, par exemple deluser louis ne supprime pas le r\u00e9pertoire personnel. Si on souhaite le faire, ajouter l'option --remove-home , par exemple deluser --remove-home louis ou encore userdel -r louis adduser et deluser n'existent que sous Debian et ses descendants dont Ubuntu. Ailleurs, il faut utiliser les commandes Unix traditionnelles useradd et userdel qui font la m\u00eame chose de mani\u00e8re plus basique, par exemple il faut appeler passwd pour d\u00e9finir un mdp et activer le compte","title":"Gestion des utilisateurs"},{"location":"#gestion-des-groupes","text":"chaque utilisateur appartient \u00e0 un groupe. Par d\u00e9faut, un groupe du m\u00eame nom que l'utilisateur est cr\u00e9\u00e9 addgroup permet de cr\u00e9er un groupe, par exemple addgroup famille delgroup permet de supprimer un groupe, par exemple delgroup famille usermod permet de modifier un utilisateur -l renomme l'utilisateur sans renommer son r\u00e9pertoire personnel -g change de groupe, par exemple usermod -g famille louis pour mettre Louis dans le groupe famille et usermod -g louis louis pour le remettre dans le groupe louis -G permet \u00e0 un utilisateur d'avoir plusieurs groupes, par exemple usermod -G famille,amis louis . L'utilisateur ne sera plus dans les groupes dans lesquels il \u00e9tait avant. -a permet d'ajouter des groupes \u00e0 un utilisateur sans perdre les groupes auxquels il appartient, par exemple usermod -aG famille louis gpasswd -d permet de supprimer l'appartenance d'un utilisateur \u00e0 un groupe, par exemple gpasswd -d louis audio le fichier /etc/group contient la liste des groupes avec leur GID et la liste de des membres des groupes addgroup et delgroup n'existent que sous Debian et ses d\u00e9riv\u00e9s. Les commandes traditionnelles sont groupadd et groupdel qui offrent moins d'options","title":"Gestion des groupes"},{"location":"#gestion-des-proprietaires-dun-fichier","text":"seul l'utilisateur root peut changer le propri\u00e9taire d'un fichier chown pour change owner , permet de changer le propri\u00e9taire d'un fichier, en renseignant le nom du nouveau propri\u00e9taire et le nom du fichier, par exemple chown louis fichier . Cela ne change pas le groupe du fichier chown louis:famille fichier permet de changer le propri\u00e9taire et le groupe en m\u00eame temps -R pour recursive permet d'affecter tous les sous-dossiers et fichiers contenu dans le dossier, par exemple chown -R louis:louis /home/gaetan/dossier/ chgrp permet de changer le groupe propri\u00e9taire du fichier, par exemple chgrp famille fichier","title":"Gestion des propri\u00e9taires d'un fichier"},{"location":"#modifier-les-droits-dacces","text":"chaque fichier et dossier poss\u00e8de des droits : voir, modifier et ex\u00e9cuter la commande ls -l permet de voir les droits, il s'agit des 10 premiers caract\u00e8res le 1er d pour directory si c'est un dossier, l pour link ou - si c'est un fichier 3 triplets qui correspondent aux droits de l'utilisateur, du groupe et des autres. Un triplet correspond \u00e0 rwx pour read , write et execute Ce dernier n'est utile que pour les fichiers ex\u00e9cutables (programmes et scripts). si la lettre appara\u00eet, c'est que le droit existe. S'il y a un tiret \u00e0 la place, c'est qu'il n'y a aucun droit. si c'est un dossier, x indique qu'on peut se placer dans le r\u00e9pertoire avec la commande cd , et voir son contenu si on a les droits en lecture dessus r . les droits de modification donnent aussi les droits de suppression root \u00e0 tous les droits chmod permet de modifier les droits d'acc\u00e8s. Pas besoin d'\u00eatre root, il suffit d'\u00eatre propri\u00e9taire du fichier pour modifier les droits d'acc\u00e8s plusieurs m\u00e9thodes d'attribution des droits avec des chiffres : r=4, w=2, x=1. On les combine en additionnant, par exemple 6 donne les droits en lecture et \u00e9criture. \u00e7a va de 0 \u00e0 7. chmod 777 fichier donne tous les droits \u00e0 tout le monde, chmod 000 fichier ne donne aucun droit \u00e0 personne, sauf \u00e0 root avec des lettres : u=user, g=group, o=other. + =ajouter, - =supprimer et = =affecter. Par exemple chmod g+w fichier ajoute le droit en \u00e9criture au groupe -R pour affecter r\u00e9cursivement tous les sous-dossiers et fichiers, par exemple chmod -R 700 /home/louis umask permet de voir les permissions par d\u00e9faut. Un fichier cr\u00e9\u00e9 ne peut avoir de base les droits d'ex\u00e9cution.","title":"Modifier les droits d'acc\u00e8s"},{"location":"#installer-des-programmes","text":"paquet : c'est un programme \u00ab pr\u00eat \u00e0 l'emploi \u00bb, l'\u00e9quivalent des programmes d'installation sous Windows en quelque sorte. C'est une sorte de dossier zipp\u00e9 qui contient tous les fichiers du programme. Il se pr\u00e9sente sous la forme d'un fichier .deb et contient toutes les instructions n\u00e9cessaires pour installer le programme d\u00e9pendance : un paquet peut avoir besoin de plusieurs autres paquets pour fonctionner, on dit qu'il a des d\u00e9pendances d\u00e9p\u00f4t : c'est le serveur sur lequel on va t\u00e9l\u00e9charger nos paquets programme graphique qui g\u00e8re les paquets ou utiliser un programme en ligne de commande comme apt-get ou aptitude apt-get update met \u00e0 jour le cache (liste des paquets existant propos\u00e9 par le d\u00e9p\u00f4t) apt-cache search paquetRecherch\u00e9 recherche le paquet que l'on veut t\u00e9l\u00e9charger si on ne connait pas le nom exact apt-get install monPaquet t\u00e9l\u00e9charge et installe le paquet apt-get upgrade met \u00e0 jour tous les paquets install\u00e9s, apr\u00e8s avoir fait un apt-get update car apt-get comapre la version des paquets install\u00e9s avec ceux pr\u00e9sents dans le cache apt-get autoremove monPaquet permet de d\u00e9sinstaller un paquet et les d\u00e9pendances devenues inutiles alors apt-get remove monPaquet ne supprime que le paquet en param\u00e8tre Programmes absents des d\u00e9p\u00f4ts officiels Si un programme est absent des d\u00e9p\u00f4ts officiels, on peut parfois trouver sur le site web du logiciel un paquetage .deb , sp\u00e9cifique \u00e0 Debian et ses distributions d\u00e9riv\u00e9es. Par exemple, Red Hat utilise des .rpm . - t\u00e9l\u00e9charger le .deb et double-cliquer dessus. - s'il n'y a pas d'erreurs, on peut installer le programme - sinon, le programme ne correspond pas \u00e0 notre machine (32 bits au lieu de 64 bits par exemple) ou alors qu'il manque des d\u00e9pendances qu'il faut installer manuellement Si le .deb n'est pas disponible, il faut alors r\u00e9cup\u00e9rer le code source du programme et le compiler pour avoir un ex\u00e9cutable pour sa machine - le programme build-essential est n\u00e9cessaire pour compiler le code source d'un programme - trouver le code source sur le site du programme et le t\u00e9l\u00e9charger, et \u00e9ventuellement le d\u00e9compresser - ex\u00e9cuter le programme configure avec la commande ./configure . Cela analyse notre ordinateur et v\u00e9rifie si tous les outils n\u00e9cessaires \u00e0 la compilation du logiciel que l'on souhaite installer sont bien pr\u00e9sents - s'il y a une erreur, il y a s\u00fbrement des paquets manquants. Il faut le trouver, l'installer puis relancer ./configure jusqu'\u00e0 qu'il n'y ait plus d'erreurs - une fois qu'il n'y a plus d'erreur, lancer la compilation avec la commande make qui cr\u00e9e l'ex\u00e9cutable - installer le programme avec la commande sudo make install . Une fois termin\u00e9, le programme est install\u00e9 et on peut le lancer en \u00e9crivant son nom dans la ligne de commande - pour le d\u00e9sinstaller, ex\u00e9cuter la commande sudo make uninstall depuis le r\u00e9pertoire o\u00f9 il a \u00e9t\u00e9 compil\u00e9. Si on supprime le r\u00e9pertoire avec le code source, on ne pourra plus lancer la commande de d\u00e9sinstallation","title":"Installer des programmes"},{"location":"#les-flux-de-redirection","text":"Au lieu d'afficher le r\u00e9sultat d'une commande dans la console (comportement par d\u00e9faut), on peut le rediriger - dans un fichier - en entr\u00e9e d'une autre commande pour effectuer des cha\u00eenes de commandes - dans la \"corbeille\", commande > /dev/null , tout est supprim\u00e9 imm\u00e9diatement, si on ne veut ni l'afficher dans la console ni dans un fichier > et >> permettent de rediriger le r\u00e9sultat dans un nouveau fichier pour > et \u00e0 la fin d'un fichier pour >> echo Bonjour affiche Bonjour dans la console echo Bonjour > test.txt enregistre Bonjour dans un fichier test.txt . Si le fichier existe d\u00e9j\u00e0, il est \u00e9cras\u00e9 echo Bonjour >> test.txt ajoute une ligne au fichier test.txt .Si le fichier n'existe pas, il sera cr\u00e9\u00e9 2>, 2>> et 2>&1 permettent de rediriger les erreurs toutes les commandes produisent deux flux de donn\u00e9es : la sortie standard et la sortie d'erreur . Par d\u00e9faut, les deux s'affichent dans la console avec > et >> , seule la sortie standard est redirig\u00e9e vers le fichier, les erreurs continuent \u00e0 \u00eatre affich\u00e9 dans la console 2> permet de rediriger les erreurs dans un fichier \u00e0 part, par exemple ls -l /root/ > test 2> erreur redirige la sortie standard dans le fichier test et la sortie d'erreur dans le fichier erreur 2>> permet d'ajouter les erreurs \u00e0 la fin du fichier 2>&1 permet de fusionner les sorties dans un seul fichier, par exemple ls -l / > testFusion 2>&1 < et << permet de lire depuis un fichier pour < , et de lire progressivement depuis le clavier pour << l'entr\u00e9e d'une commande vient des param\u00e8tres de la commande, mais elle peut aussi venir d'un fichier ou d'une saisie au clavier cat < fichier affiche le contenu de fichier . La commande cat re\u00e7oit le contenu du fichier qu'elle affiche, alors que la commande cat fichier re\u00e7oit le nom du fichier qu'elle doit d'abord ouvrir pour ensuite afficher son contenu. Le r\u00e9sultat est le m\u00eame mais ce qui se passe derri\u00e8re est diff\u00e9rent << passe la console en mode saisie au clavier ligne par ligne. Toutes ces lignes seront envoy\u00e9es \u00e0 la commande lorsque le mot-cl\u00e9 de fin aura \u00e9t\u00e9 \u00e9crit. Par exemple : wc -m << FIN Combien de caract\u00e8res dans cette phrase ? FIN | permet de cha\u00eener les commandes connecter la sortie d'une commande \u00e0 l'entr\u00e9e d'une autre commande exemple : du | sort -nr | head permet d'afficher les 10 dossiers les plus lourds tri\u00e9s par taille","title":"Les flux de redirection"},{"location":"#surveiller-lactivite-du-systeme","text":"w permet de voir qui est connect\u00e9 et ce qu'ils font l'heure, aussi accessible via date l'uptime, aussi accessible via uptime , qui indique depuis combien de temps l'ordinateur n'a pas \u00e9t\u00e9 red\u00e9marr\u00e9 la charge, aussi accessible via uptime et tload . Il s'agit de la charge moyenne depuis 1, 5 et 15 minutes, plus pr\u00e9cis\u00e9ment le nombre de processus qui r\u00e9clament le processeur. La charge maximale correspond au nombre de processeur, au del\u00e0, il y a surcharge la liste des personnes connect\u00e9s sur la machine, accessible aussi via who free -m mesure la consommation m\u00e9moire. L'option -m permet d'avoir l'information en Mo ps et top pour lister les processus un processus est un programme qui tourne en m\u00e9moire. Certains programmes ne font tourner qu'un processus, d'autres plusieurs comme Chrome qui cr\u00e9e un processus par onglet ps permet d'avoir la liste statique des processus en cours PID est l'identifiant du processus par d\u00e9faut, seul les processus lanc\u00e9s par l'utilisateur dans la console sont affich\u00e9s ps -x affiche l'ensemble des processus de l'utilisateur -a ajoute ceux de tous les utilisateurs -u donne des informations suppl\u00e9mentaires comme le propri\u00e9taire du processus, l'utilisation du processus et de la m\u00e9moire ps -ef permet d'afficher tous les processus et ps -ejH de les afficher en arbre pstree , ou pstree | less affiche l\u2019organisation hi\u00e9rarchique de tous les processus en cours du syst\u00e8me top permet d'avoir la liste dynamique des processus et permet de mesurer la consommation en ressources de chaque processus affiche les processus tri\u00e9 sur le taux d'utilisation du processeur h permet d'afficher l'aide Ctrl + C ou kill pour arr\u00eater un processus Ctrl + C permet d'arr\u00eater un processus lanc\u00e9 en console kill permet d'arr\u00eater proprement un processus lanc\u00e9 en arri\u00e8re-plan en indiquant son PID , par exemple kill 12345 kill -9 permet de tuer un processus sans lui laisser le temps de s'arr\u00eater proprement, s'il refuse de se fermer normalement. Par exemple kill -9 12345 killall permet de tuer tous les processus d'un m\u00eame programme, par exemple killall find \u00e9teindre l'ordinateur halt , poweroff et reboot -p arr\u00eatent le syst\u00e8me en tuant tous les processus sans pr\u00e9venir personne reboot redem\u00e9arre le syst\u00e8me de la m\u00eame mani\u00e8re shutdown arr\u00eate ou red\u00e9marre le syst\u00e8me proprement : shutdown -h now et shutdown -r now","title":"Surveiller l'activit\u00e9 du syst\u00e8me"},{"location":"#executer-des-programmes-en-arriere-plan","text":"un service , ou demon est un processus qui s'ex\u00e9cute en arri\u00e8re-plan plut\u00f4t que sous le contr\u00f4le direct d'un utilisateur & permet de lancer un processus en arri\u00e8re-plan, par exemple cp fichier copie & les messages renvoy\u00e9s par les commandes s'affichent toujours dans la console. On peut donc les envoyer dans un fichier, par exemple find / -name \"*log\" > sortiefind & nohup permet de d\u00e9tacher le processus de la console. Si l'utilisateur se d\u00e9connecte ou si la console est ferm\u00e9e, le processus continuera. Exemple : nohup fichier copie Ctrl+Z met en pause un processus ex\u00e9cut\u00e9 au premier plan, sans & donc bg pour background , passe le processus en pause en arri\u00e8re-plan jobs permet de conna\u00eetre les processus qui tournent en arri\u00e8re-plan fg pour foreground , permet de reprendre un processus au premier plan fg s'il y a un seul processus en arri\u00e8re-plan list\u00e9 dans jobs fg %x s'il y a plusieurs processus en arri\u00e8re-plan pour reprendre le processus x screen est un programme qui permet d'ouvrir plusieurs consoles virtuelles au sein d'une seule et m\u00eame console, et d'ex\u00e9cuter facilement plusieurs processus en parall\u00e8le","title":"Ex\u00e9cuter des programmes en arri\u00e8re-plan"},{"location":"#executer-des-programmes-a-une-heure-differee","text":"date permet d'afficher la date date \"+%H:%M:%S\" permet de personnaliser l'affichage sudo date MMDDhhmmYYYY permet de modifier la date syst\u00e8me at permet d'ex\u00e9cuter une commande plus tard une seule fois 1) on indique quand on veut ex\u00e9cuter la commande, par exemple at 18:17 ou at 18:17 tomorrow ou at 18:17 04/12/18 (12 avril, attention \u00e0 l'ordre MM/DD/YY) ou encore at now +5 minutes (minutes, hours, days, weeks, months, years) 2) taper la ou les commandes que l'on veut ex\u00e9cuter \u00e0 cette heure l\u00e0 3) faire Ctrl + D . Le symbole <EOT> s'affiche et nous donne le num\u00e9ro de la t\u00e2che (job en anglais) atq permet d'avoir la liste des jobs en attente atrm permet de supprimer un job en attente, par exemple atrm 5 pour supprimer le job n\u00b05 il est possible d'encha\u00eener des commandes : avec le point-virgule, par exemple touch fichier; rm fichier avec les && , par exemple touch fichier && sleep 10 && rm fichier . Les instructions ne s'encha\u00eeneront que si elles se sont correctement ex\u00e9cut\u00e9es sleep permet de faire une pause, par exemple touch fichier; sleep 10; rm fichier ou une pause de 10 secondes aura lieu on peut r\u00e9gler l'unit\u00e9 de sleep qui est par d\u00e9faut la seconde : m pour minute, h pour heure et d pour jour. Exemple : sleep 1m crontab permet ex\u00e9cuter une commande r\u00e9guli\u00e8rement crontab permet de lire et modifier un fichier appel\u00e9 la crontab , qui contient la liste des programmes \u00e0 ex\u00e9cuter r\u00e9guli\u00e8rement, et l'heure \u00e0 laquelle ils soient ex\u00e9cut\u00e9s -l permet d'afficher la crontab, -e la modifier, -r la supprimer sans confirmation syntaxe : m h dom mon dow command pour minute (0-59), hour (0-23), day of month (1-31), month (1-12), day of week (0-6, 0=dimanche) on peut mettre une \u00e9toile \u00e0 la place d'un chiffre pour dire tous les chiffres 3,5,10 pour les 3 valeurs, 3-7 pour les valeurs 3 \u00e0 7, */3 pour les multiples de 3, par exemple 0, 3, 6, 9... le r\u00e9sultat de la commande n'appara\u00eet pas dans la console, il est normalement envoy\u00e9 par mail le rediriger dans un fichier : 45 18 * * * touch /home/louis/fichier >> /home/louis/cron.log 2>&1 le rediriger dans le trou noir pour suppression imm\u00e9diate : * * * * * commande > /dev/null 2>&1 exemples : 45 18 * * * commande est ex\u00e9cut\u00e9 tous les jours \u00e0 18h45 0 0 * * 1 commande tous les lundis \u00e0 minuit (nuit de dimanche \u00e0 lundi) 0 4 1 * * commande tous les premiers du mois \u00e0 4h 0 4 * 12 * commande tous les jours du mois de d\u00e9cembre * * * * * toutes les minutes, c'est la fr\u00e9quence minimale","title":"Ex\u00e9cuter des programmes \u00e0 une heure diff\u00e9r\u00e9e"},{"location":"#archiver-et-compresser","text":"tar , pour tape archiver , est un programme d'archivage. Il permet : d'assembler des fichiers dans une archive regroupement des fichiers dans un m\u00eame dossier cr\u00e9ation de l'archive tar : tar -cvf nomArchive.tar nomDossier/ . -c pour la cr\u00e9ation de l'archive, -v pour l'affichage des d\u00e9tails de l'op\u00e9ration et -f pour assembler l'archive dans un fichier d'afficher le contenu d'une archive sans l'extraire, par exemple tar -tf archive.tar d'ajouter un fichier \u00e0 une archive existante, par exemple tar -rvf archive.tar nouveauFichier d'extraire les fichiers d'une archive, par exemple tar -xvf archive.tar avec -x pour extract . Le contenu de l'archive est extrait dans le r\u00e9pertoire courant Les diff\u00e9rents programmes de compression d'une archive - gzip , pour GNU Zip , est le plus connu et le plus utilis\u00e9 - gzip archive.tar compresse l'archive qui devient archive.tar.gz - gunzip archive.tar.gz ou gzip -d archive.tar.gz d\u00e9compresse l'archive qui redevient archive.tar - bzip2 compresse mieux mais plus lentement - bzip2 archive.tar compresse l'archive qui devient archive.tar.bz2 - bunzip2 archive.tar.bz2 ou bzip2 -d archive.tar d\u00e9compresse l'archive qui redevient archive.tar - compress n'est plus utilis\u00e9 car moins performant que gzip et bzip2 - contrairement \u00e0 zip et rar , gzip et bzip2 ne peuvent compresser qu'un seul fichier \u00e0 la fois, c'est pour cela qu'il faut cr\u00e9er une archive tar auparavant Archiver et compresser en m\u00eame temps avec tar - avec gzip - -zcvf permet d'archiver et compresser, par exemple tar -zcvf nomArchive.tar.gz nomDossier/ - -zxvf permet de d\u00e9compresser, par exemple tar -zxvf nomArchive.tar.gz - avec bzip2 - -jcvf permet d'archiver et compresser, par exemple tar -zcvf nomArchive.tar.bz2 nomDossier/ - -jxvf permet de d\u00e9compresser, par exemple tar -zxvf nomArchive.tar.bz2 Lecture d'un fichier compress\u00e9 - on peut compresser directement un fichier en faisant gzip fichier - si on veut le lire, par exemple en faisant cat fichier , des caract\u00e8res bizarres s'affichent \u00e0 cause de la compression. A la place, on peut utiliser zcat , zmore ou zless qui permettent de lire un fichier compress\u00e9. Exemple zmore fichier D\u00e9compresser les zip et les rar - unzip permet de d\u00e9compresser un .zip - exemple unzip archive.zip - -l permet d'afficher le contenu sans l'extraire, par exemple unzip -l archive.zip - zip permet de cr\u00e9er un zip , par exemple zip -r dossier.zip dossier/ - unrar permet de d\u00e9compresser un rar - exemple unrar e toto.rar sans tiret devant le e - unrar l toto.rar permet d'afficher le contenu sans l'extraire - il n'est pas possible gratuitement de cr\u00e9er des rar car c'est un format propri\u00e9taire. Le paquet rar est payant","title":"Archiver et compresser"},{"location":"#les-connexions-a-distance","text":"","title":"Les connexions \u00e0 distance"},{"location":"#les-protocoles","text":"on peut configurer une machine Linux pour s'y connecter \u00e0 distance \u00e0 condition qu'elle reste allum\u00e9e pour communiquer entre eux, deux ordinateurs doivent utiliser le m\u00eame protocole il en existe plein, par exemple HTTP pour s'\u00e9changer des pages web, FTP protocole de transfert de fichier, IMAP protocole pour s'\u00e9changer des emails... Telnet est un protocole simple cr\u00e9\u00e9 dans les ann\u00e9es 80 pour \u00e9changer des messages en clair d'une machine \u00e0 une autre, qui peuvent donc \u00eatre intercept\u00e9s et lus par n'importe qui SSH est un protocole qui permet de chiffrer les \u00e9changes cr\u00e9ation d'un tunnel s\u00e9curis\u00e9 avec SSH (tout ce fait automatiquement) : utilisation du chiffrement asym\u00e9trique pour s'\u00e9changer une cl\u00e9 de chiffrement sym\u00e9trique : le serveur envoie la cl\u00e9 publique en clair au client pour qu'il puisse chiffrer le client g\u00e9n\u00e8re une cl\u00e9 de chiffrement sym\u00e9trique qu'il chiffre gr\u00e2ce \u00e0 la cl\u00e9 publique qu'il a re\u00e7ue, et l'envoi au serveur, qui d\u00e9chiffre la cl\u00e9 re\u00e7ue gr\u00e2ce \u00e0 sa cl\u00e9 priv\u00e9e ensuite, utilisation du chiffrement sym\u00e9trique pour chiffrer tous les \u00e9changes car le chiffrement asym\u00e9trique est beaucoup plus lent que le chiffrement sym\u00e9trique. une fois le tunnel mis en place, le client peut se connecter au serveur avec son login et son mot de passe","title":"Les protocoles"},{"location":"#transformer-sa-machine-en-serveur-et-sy-connecter-en-ssh","text":"transformer son pc en serveur : il faut installer le paquet openssh-server sudo apt-get install openssh-server normalement, le serveur SSH sera lanc\u00e9 \u00e0 chaque d\u00e9marrage sudo /etc/init.d/ssh start permet de le lancer \u00e0 tout moment sudo /etc/init.d/ssh stop permet de l'arr\u00eater \u00e0 tout moment au besoin, le fichier de configuration se trouve dans /etc/ssh/ssh_config . Il faut ensuite recharger SSH avec la commande sudo /etc/init.d/ssh reload pour que les changements soient pris en compte se connecter via SSH \u00e0 partir d'une machine Linux ssh login@ip en rempla\u00e7ant login par notre login et ip par l'adresse IP de notre ordinateur que l'on peut obtenir par exemple via le site www.whatismyip.com ou l'IP locale si on se connecte depuis un autre ordinateur sur le m\u00eame reseau local ssh login@localhost ou ssh login@127.0.0.1 permet de se connecter depuis son propre PC exit ou logout permet de se d\u00e9connecter le port 22 est le port utilis\u00e9 par d\u00e9faut par SSH. Si le serveur tourne sur un autre port, il faut le pr\u00e9ciser comme ceci : ssh login@ip -p 12345 si le serveur fonctionne sur le port 12345 le fingerprint du serveur, ou empreinte, est un num\u00e9ro unique qui permet d'identifier le serveur. Si quelqu'un essaie de se faire passer pour le serveur, le fingerprint changera et on sera averti se connecter via SSH \u00e0 partir d'une machine Windows renseigner l'adresse IP dans Host Name et le port (22 par d\u00e9faut) lors de la premi\u00e8re connexion, Putty nous demande une confirmation en nous donnant l'empreinte du serveur le serveur demande le login et le mot de passe. La connexion est maintenant \u00e9tablie","title":"Transformer sa machine en serveur et s'y connecter en SSH"},{"location":"#lidentification-automatique-par-cle","text":"Les m\u00e9thodes les plus utilis\u00e9es pour s'authentifier aupr\u00e8s du serveur sont l'authentification par mot de passe l'authentification par cl\u00e9s publique et priv\u00e9e du client . cette m\u00e9thode \u00e9vite de renseigner son mot de passe \u00e0 chaque fois la cl\u00e9 publique ainsi g\u00e9n\u00e9r\u00e9e doit \u00eatre envoy\u00e9e sur le serveur, la cl\u00e9 priv\u00e9e reste sur le PC du client. La connexion se fait alors sans mot de passe et reste s\u00e9curis\u00e9e Authentification par cl\u00e9 depuis Linux g\u00e9n\u00e9rer une paire de cl\u00e9s publique/priv\u00e9e avec la commande ssh-keygen -t rsa sur le client rsa \u00e9tant un algorithme de chiffrement asym\u00e9trique, on peut aussi utiliser dsa qui est un autre algorithme de chiffrement les cl\u00e9s sont enregistr\u00e9es dans des fichiers. Laisser les valeurs par d\u00e9faut, ~/.ssh/id_rsa.pub pour la cl\u00e9 publique et ~/.ssh/id_rsa pour la cl\u00e9 priv\u00e9e. Le dossier .ssh/ contient aussi un fichier known_hosts qui est la liste des fingerprint que votre PC de client tient \u00e0 jour on nous demande une passphrase qui sert \u00e0 chiffrer la cl\u00e9 priv\u00e9e pour plus de s\u00e9curit\u00e9. On peut ne pas la renseigner si personne d'autre n'utilise le PC ou ne peut lire le fichier contenant la cl\u00e9 priv\u00e9e. envoyer la cl\u00e9 publique au serveur, pour qu'il puisse chiffrer les messages qu'il nous envoi ssh-copy-id -i id_rsa.pub login@ip avec le login et l'ip du serveur on envoie la cl\u00e9 publique id_rsa.pub sur le serveur dans son fichier authorized_keys on peut maintenant se connecter avec la commande ssh login@ip . Si on n'a pas mis de passphrase on est directement connect\u00e9, sinon il faut renseigner la passphrase pour \u00e9viter de renseigner la passphrase \u00e0 chaque fois, on peut utiliser l'agent SSH qui permet de la renseigner une seule fois. C'est un programme qui tourne en m\u00e9moire qui retient les cl\u00e9s priv\u00e9es pendant toute la dur\u00e9e de la session. Lancer le programme avec ssh-add sur le client, qui va lire notre cl\u00e9 priv\u00e9e et va nous demander notre passphrase pour la d\u00e9chiffrer. On peut maintenant se connecter plusieurs fois sur le m\u00eame serveur ou sur diff\u00e9rents serveurs sans retaper le passphrase Authentification par cl\u00e9 depuis Windows avec Putty m\u00eame principe : g\u00e9n\u00e9rer une paire de cl\u00e9s publique/priv\u00e9e sur le client et envoyer la cl\u00e9 publique au serveur g\u00e9n\u00e9rer la paire de cl\u00e9 avec Puttygen en laissant les valeurs par d\u00e9faut. on peut \u00e9ventuellement renseigner une passphrase enregistrer les cl\u00e9s dans des fichiers, par exemple cle.pub et cle.ppk se connecter au serveur avec son login/mdp et ajouter la cl\u00e9 publique dans les cl\u00e9 autoris\u00e9es \u00e0 la fin du fichier : cd .ssh pour aller dans le dossier .ssh de notre dossier personnel puis echo \"cle_publique\" >> authorized_keys se d\u00e9connecter pour configurer Putty pour se connecter avec la cl\u00e9. Dans Connection \u2192 SSH \u2192 Auth , indiquer le chemin du fichier contenant la cl\u00e9 priv\u00e9e, et dans Connection \u2192 Data renseigner le login dans Auto-login username se connecter en cliquant sur Open, le login est d\u00e9j\u00e0 renseign\u00e9, il faut renseigner la passphrase pour \u00e9viter de renseigner la passphrase \u00e0 chaque fois, on peut utiliser l'agent SSH Pageant , install\u00e9 avec Putty. Il est possible de le lancer automatiquement au d\u00e9marrage. Cliquer sur addkey , pr\u00e9ciser l'emplacement du fichier et renseigner la passphrase. Se connecter \u00e0 un serveur en s\u00e9lectionnant Saved Sessions","title":"L'identification automatique par cl\u00e9"},{"location":"#le-transfert-de-fichiers","text":"wget permet de t\u00e9l\u00e9charger des fichiers en indiquant l'adresse HTTP ou FTP exemple wget https://thumbs.dreamstime.com/z/chat-mignon-2507126.jpg -c permet de reprendre un t\u00e9l\u00e9chargement arr\u00eat\u00e9 si le bout de fichier t\u00e9l\u00e9charg\u00e9 est toujours l\u00e0 : wget -c adresseHttp --background permet de laner un t\u00e9l\u00e9chargement en t\u00e2che de fond (tout comme la commande nohup ) scp pour secure copy , permet de copier des fichiers sur le r\u00e9seau d'un ordinateur \u00e0 un autre de mani\u00e8re s\u00e9curis\u00e9e rcp pour remote copy fait la m\u00eame chose sans cryptage syntaxe : scp origine destination , sous la forme login@ip:nom_fichier . Le login et l'IP sont facultatifs. S'ils sont absents, la commande consid\u00e8re que le fichier est sur notre ordinateur exemple : scp louis@12.345.67.890:image.png copie.png copie l'image sur l'ordinateur distant sur mon ordinateur sous le nom copie.png scp louis@12.345.67.890:image.png . fait la m\u00eame copie sans changer le nom du fichier, le . signifie r\u00e9pertoire courant si le serveur SSH sur lequel on se connecte n'est pas sur le port par d\u00e9faut (22), il faut indiquer le num\u00e9ro de port avec -P . Par exemple scp -P 12345 louis@12.345.67.890:image.png . avec un P majuscule contrairement \u00e0 la commande ssh qui utilise le p minuscule pour le port ftp et sftp permettent de transf\u00e9rer des fichiers Le FTP pour File Transfer Protocol est un protocole permettant d'\u00e9changer des fichiers sur le r\u00e9seau. Il est assez ancien (1985) et toujours utilis\u00e9 \u00e0 l'heure actuelle pour transf\u00e9rer des fichiers On l'utilise pour t\u00e9l\u00e9charger depuis un serveur FTP public, notamment lorsqu'on clique sur un lien de t\u00e9l\u00e9chargement via un navigateur. La connexion se fait alors en mode anonyme . On l'utilise aussi pour transf\u00e9rer des fichiers vers un serveur FTP priv\u00e9 (et aussi t\u00e9l\u00e9charger). La connexion se fait donc en mode authentifi\u00e9 FileZilla est un logiciel graphique qui permet de faire des transferts de fichiers via FTP ftp adresseServeurFtp permet de se connecter \u00e0 un serveur FTP exemple : ftp speedtest.tele2.net ou via un navigateur web ftp://speedtest.tele2.net/ sur les serveur public, le login est toujours anonymous et pour le mot de passe, tout fonctionne. On fait ensuite face \u00e0 un prompt ftp> les commandes sont pour la plupart les m\u00eames que celles qu'on connait : ls liste les fichiers du r\u00e9pertoire courant, pwd affiche le chemin du r\u00e9pertoire actuel, cd change de r\u00e9pertoire... pour utiliser les commandes sur son poste, il faut ajouter un point d'exclamation au d\u00e9but, par exemple !pwd pour savoir dans quel r\u00e9pertoire on est sur notre ordinateur put et get permettent d'envoyer un fichier vers le serveur et de t\u00e9l\u00e9charger un fichier depuis le serveur exemple : get fichier.zip pour t\u00e9l\u00e9charger fichier.zip delete permet de supprimer un fichier et non rm bye , exit , quit et Ctrl+D permet de fermer la session sftp est un FTP s\u00e9curis\u00e9 contrairement \u00e0 FTP ou les donn\u00e9es circulent en clair repose sur SSH pour s\u00e9curiser la connexion : sftp login@ip et on nous demande ensuite notre mot de passe (ou connexion via cl\u00e9 publique/priv\u00e9e) les commandes sont globalement les m\u00eames qu'avec ftp , sauf pour supprimer un fichier, il faut utiliser rm et non plus delete par d\u00e9faut, on utilise le port 22 comme pour SSH. Si le port est diff\u00e9rent, il faut le pr\u00e9ciser comme ceci : sftp -oPort=27401 login@ip rsync permet de synchroniser des fichiers pour une sauvegarde permet d'effectuer une synchronisation entre deux r\u00e9pertoires, que ce soit sur le m\u00eame PC ou entre deux ordinateurs reli\u00e9s en r\u00e9seau utilis\u00e9 pour effectuer des sauvegardes incr\u00e9mentielles : rsync compare et analyse les diff\u00e9rences entre deux dossiers puis copie uniquement les changements rsync -arv dossierASauvegarder/ backup/ fait une sauvegarde dans un autre dossier du m\u00eame ordinateur -a conserve les infos sur les fichiers (droits, date de modification...) -r pour sauvegarder tous les sous-dossiers -v mode verbeux pour afficher les d\u00e9tails par d\u00e9faut, rsync ne supprime pas les fichiers dans le r\u00e9pertoire de copie. Il faut ajouter l'option --delete . Exemple : rsync -arv --delete dossierASauvegarder/ backup/ sauvegarder les fichiers supprim\u00e9s --backup garde de c\u00f4t\u00e9 les fichiers supprim\u00e9s qui prennent un suffixe dans le r\u00e9pertoire de sauvegarde --backup-dir=/chemin d\u00e9place les fichiers supprim\u00e9s dans un dossier d\u00e9di\u00e9. Exemple : rsync -arv --delete --backup --backup-dir=/home/louis/backups_supprimes Images/ backups/ --exclude permet d'exclure un dossier de la sauvegarde rsync permet de sauvegarder sur un autre ordinateur, le plus couramment en utilisant SSH rsync -arv --delete --backup --backup-dir=/home/louis/fichiersSupprimes Images/ louis@ip:backup/ rsync -arv --delete --backup --backup-dir=/home/louis/fichiersSupprimes Images/ louis@ip:backup/ -e \"ssh -p 12345\" si le serveur SSH \u00e9coute sur un autre port que celui par d\u00e9faut","title":"Le transfert de fichiers"},{"location":"#le-reseau","text":"adresse IP : chaque ordinateur reli\u00e9 \u00e0 Internet est identifi\u00e9 par une adresse IP format IPv4 : 86.172.120.28 format IPv6 : fe80::209:62fa:fb80:29f2 nom d'h\u00f4te, hostname en anglais, \u00e9quivalent \u00e0 l'IP mais plus simple \u00e0 retenir host donne le nom d'h\u00f4te \u00e0 partir de l'adresse IP et inversement. Exemple : host siteduzero.com et host 92.243.25.239 les serveurs DNS fournissent la liste des correspondances IP <-> noms d'h\u00f4te le fichier /etc/hosts permet de modifier la liste de correspondance personnalis\u00e9e de notre ordinateur, par exemple ajouter un nom d'h\u00f4te \u00e0 chaque PC pour s'y connecter sans retenir l'IP whois donne des renseignements sur un nom de domaine. Exemple : whois siteduzero.com ifconfig liste les interfaces r\u00e9seau et permet aussi de faire des r\u00e9glages r\u00e9seau exemple : eth0 pour une connexion par c\u00e2ble r\u00e9seau, lo pour la boucle locale, c'est-\u00e0-dire une connexion \u00e0 soi-m\u00eame, wlan0 pour une connexion sans-fil Wi-Fi ifconfig interface etat permet d'activer/d\u00e9sactiver une interface r\u00e9seau, par exemple ifconfig eth0 down ou ifconfig eth0 up netstat permet d'avoir des statistiques sur le r\u00e9seau netstat -i donnent des stats par interface r\u00e9seau netstat -uta liste toutes les connexions ouvertes -u pour les connexions UDP, -t pour les connexions TCP, -a pour afficher toutes les connexions quelque soit leur \u00e9tat permet de voir les ports sur lequels se sont les connexions. -n permet d'avoir les num\u00e9ros des ports plutot qu'une description en toutes lettres -l permet de filter uniquement les connexions \u00e0 l'\u00e9tat LISTEN netstat -s permet d'avoir des statistiques r\u00e9sum\u00e9es iptables est un pare-feu Linux. Il permet d'\u00e9tablir des r\u00e8gles \u00e0 quels ports on peut se connecter \u00e0 votre ordinateur \u00e0 quels ports vous avez le droit de vous connecter filtrer par IP iptables -L affiche les r\u00e8gles actuellement en place Chain INPUT correspond aux r\u00e8gles manipulant le trafic entrant, Chain FORWARD correspond aux r\u00e8gles manipulant la redirection du trafic, Chain OUTPUT correspond aux r\u00e8gles manipulant le trafic sortant policy ACCEPT signifie que par d\u00e9faut, tout le trafic est accept\u00e9, alors que policy DROP permet de resufer toutes les connexions que nous n'avons pas autoris\u00e9 iptables -F permet de r\u00e9initialiser toutes les r\u00e8gles iptables l'ajout et la suppression de r\u00e8gles : TODO","title":"Le r\u00e9seau"},{"location":"#les-scripts-bash","text":"","title":"Les scripts bash"},{"location":"#introduction","text":"il existe plusieurs environnements console que l'on appelle shell le shell est le programme qui g\u00e8re l'invite de commandes et ses fonctionnalit\u00e9s comme l'historique des commandes, l'autocompl\u00e9tion, la d\u00e9finition des alias... les fonctionnalit\u00e9s offertes par l'invite de commandes peuvent varier en fonction du shell que l'on utilise les principaux shells sont : sh pour Bourne Shell , l'anc\u00eatre de tous les shells bash pour Bourne Again Shell , une am\u00e9lioraton de sh*, shell par d\u00e9faut de la plupart des distributions Linux et aussi de Mac OS X ksh , csh , tcsh , zsh chsh pour Change Shell permet de changer de shell la programmation shell est un minilangage de programmation int\u00e9gr\u00e9 \u00e0 Linux un script shell permet d'automatiser une s\u00e9rie de commandes. On cr\u00e9e pour cela un fichier contenant la liste des commandes \u00e0 ex\u00e9cuter, appel\u00e9 script shell. On dit que l'on fait de la programmation shell un script shell d\u00e9pend d'un shell pr\u00e9cis, le langage n'est pas exactement le m\u00eame selon le shell quel 'on utilse' on va utiliser bash Cr\u00e9ation d'un script bash par convention, on donne l'extension .sh aux scripts shell. Ce n'est pas obligatoire, \u00e7a fonctionne sans extension indiquer sur la premi\u00e8re le ligne le nom du shell utilis\u00e9 : #!/bin/bash il suffit ensuite d'\u00e9crire les commandes \u00e0 ex\u00e9cuter les unes apr\u00e8s les autres, chacune sur une ligne diff\u00e9rente les lignes commen\u00e7ant par # sont des lignes de commentaires, la premi\u00e8re ligne du sha-bang fait exception Ex\u00e9cution d'un script rendre ex\u00e9cutable le fichier : chmod u+x script.sh ou chmod +x script.sh ex\u00e9cuter le script : ./script.sh en \u00e9tant dans le r\u00e9pertoire du script, ou alors taper le chemin entier, par exemple /home/louis/scripts/test.sh ex\u00e9cuter le script en mode d\u00e9bug : bash -x script.sh , ce qui affiche le d\u00e9tail de l'ex\u00e9cution du script pour ne plus taper ./ devant le nom des scripts, il faut les placer dans un des r\u00e9pertoires du PATH , qui est une variable syst\u00e8me qui indique une liste des r\u00e9pertoires qui contiennent des ex\u00e9cutables que l'on souhaite pouvoir lancer sans indiquer leur r\u00e9pertoire. echo $PATH permet d'avoir cette liste, comme /bin ou /usr/bin . Pour ex\u00e9cuter le script, il n'y a plus qu'\u00e0 faire script.sh","title":"Introduction"},{"location":"#afficher-et-manipuler-une-variable","text":"d\u00e9clarer une variable : nomVariable='valeur de la variable' sans espace autour du = si on utlise des apostrophes, il faut les \u00e9chapper : nomVariable='Bonjour, c\\'est moi' les back quotes ** `** (Alt Gr + 7) demandent \u00e0 bash d'ex\u00e9cuter ce qui se trouve \u00e0 l'int\u00e9rieur. Par exemple, la commande suivante ex\u00e9cute la commande *pwd* : ```bash message= pwd` echo \"Vous \u00eates dans le dossier $message\" bash Vous \u00eates dans le dossier /home/louis/bin ``` afficher une variable : echo $nomVariable va afficher le contenu de nomVariable echo 'Le message est : $message' va afficher Le message est : $message car le contenu n'est pas analys\u00e9 avec des simples quotes mais affich\u00e9 tel quel echo \"Le message est : $message\" va afficher Le message est : Bonjour car le contenu est analys\u00e9 avec des doubles quotes et les caract\u00e8res sp\u00e9ciaux comme les variables sont interpr\u00e9t\u00e9s read demande \u00e0 l'utilisateur de saisir du texte, qui sera stock\u00e9 dans une variable exemple : bash read var1 var2 echo \"Bonjour $var1 $var2\" L'utilisateur est invit\u00e9 \u00e0 taper du texte (1\u00e8re ligne) avant de voir le r\u00e9sultat s'afficher bash Louis Varlet Bonjour Louis Varlet -p permet d'afficher un message de prompt : read -p 'Entrez votre nom : ' nom -n limite le nombre de caract\u00e8res : read -n 5 nom -t limite le temps de saisie -s masque les caract\u00e8res saisis let permet d'effectuer des op\u00e9rations math\u00e9matiques sans pr\u00e9ciser let , les variables sont des cha\u00eenes de caract\u00e8res exemple : let \"a = 5\" , let \"b = 2\" , let \"c = a + b\" , echo $c . Ce dernier retournera 7 les op\u00e9rations : addition (+), soustraction (-), multiplication (*), division enti\u00e8re (/), puissance (**) et modulo (%) les variables d'environnement utilisable dans n'importe quel programme, on parle aussi de variables globales env ou printenv permet de lister toutes celles qui sont en m\u00e9moire : SHELL qui indique le type de shell en cours d'utilisation, PATH vu avant, EDITOR qui indique l'\u00e9diteur de texte par d\u00e9faut, HOME qui indique la position du dossier home , PWD , OLDPWD ... printenv VARIABLE affiche la valeur de la variable d'environnement VARIABLE on peut les utiliser en les appelant par leur nom : echo \"Votre \u00e9diteur par d\u00e9faut est $EDITOR\" les variables de param\u00e8tres les scripts bash acceptent des param\u00e8tres : ./script.sh param1 param2 pour les r\u00e9cup\u00e9rer : $# contient le nombre de param\u00e8tres $0 contient le nom du script $1 contient le 1er param\u00e8tre, ..., $9 contient le 9e param\u00e8tre exemple : echo \"Le param\u00e8tre 1 est $1\" les tableaux ils contiennent plusieurs cases, par exemple tableau=('valeur0' 'valeur1' 'valeur2') pour y acc\u00e9der, ${tableau[2]} , la num\u00e9rotation commence \u00e0 0 on peut aussi d\u00e9finir le contenu d'une case : tableau[2]='valeur2' on peut afficher l'ensemble du contenu du tableau d'un seul coup en utilisant ${tableau[*]}","title":"Afficher et manipuler une variable"},{"location":"#les-conditions","text":"","title":"Les conditions"},{"location":"#les-boucles","text":"","title":"Les boucles"},{"location":"#les-fonctions","text":"","title":"Les fonctions"}]}